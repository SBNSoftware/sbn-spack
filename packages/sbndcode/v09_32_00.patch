diff --git a/CMakeLists.txt b/CMakeLists.txt
index 72e8093..22bb87a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,20 +11,20 @@
 #  make install
 #  make package (builds distribution tarfile)
 # ======================================================================
+cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
 
-cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
+find_package(cetmodules 2.29.07 REQUIRED)
 project(sbndcode VERSION 09.32.00 LANGUAGES CXX)
 
 message(STATUS "\n")
 message(STATUS "=================================   ${PROJECT_NAME}   =================================")
 message(STATUS "")
+set(sbndcode::FW_DIR fw)
+# cetbuildtools contains our cmake modules ### MIGRATE-ACTION-REQUIRED: remove
 
-# cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
-
-list(APPEND CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules)
+list(APPEND CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules) ### MIGRATE-ACTION-REQUIRED: remove
 
 include(CetCMakeEnv)
 cet_cmake_env()
@@ -41,7 +41,7 @@ cet_set_compiler_flags(DIAGS CAUTIOUS
 )
 ##add_definitions(-DGENIE_PRE_R3)
 
-cet_report_compiler_flags()
+cet_report_compiler_flags(REPORT_THRESHOLD VERBOSE)
 
 # save the repository tag
 unset(GIT_REPOSITORY_TAG)
@@ -54,34 +54,41 @@ message(STATUS "${PROJECT_NAME} repository tag: ${GIT_REPOSITORY_TAG}")
 install_source(LIST RepositoryTag)
 
 # these are minimum required versions, not the actual product versions
-find_ups_product( sbncode )
-find_ups_product( sbnobj )
-find_ups_product( larpandora )
-find_ups_product( larsim )
-find_ups_product( lardata )
-find_ups_product( lardataobj )
-find_ups_product( lardataalg )
-find_ups_product( larevt )
-find_ups_product( larcore )
-find_ups_product( larcoreobj )
-find_ups_product( larreco )
-find_ups_product( larana )
-find_ups_product( nutools )
-find_ups_product( nusimdata )
-find_ups_product( nug4 )
-find_ups_product( nugen )
-find_ups_product( nuevdb )
-find_ups_product( nurandom )
-find_ups_product( art )
-find_ups_product( art_root_io )
-find_ups_product( postgresql )
-find_ups_product( hep_concurrency )
-find_ups_product( pandora )
-find_ups_product( eigen )
-find_ups_geant4()
-find_ups_boost()
-find_ups_root()
-
+find_package( art )
+find_package( art_root_io )
+find_package( sbncode ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( sbnobj ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( larpandora ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( larpandoracontent )
+find_package( larsim ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( lardata ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( lardataobj ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( lardataalg ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( larevt ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( larcore ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( larcoreobj ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( larcorealg )
+find_package( larreco ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( larana ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( nutools ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( nusimdata ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( nug4 ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( nugen ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( nuevdb ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( nurandom ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( art ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( art_root_io ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( postgresql ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( hep_concurrency ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( pandora ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( eigen ) ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+find_package( Geant4 REQUIRED )
+find_package( Boost COMPONENTS system unit_test_framework)
+find_package( ROOT )
+find_package( Eigen3 )
+find_library(DK2NU_TREE NAMES dk2nuTree)
+find_library( IFDH NAMES ifdh )
+find_library( XML2 NAMES xml2 )
 # macros for dictionary and simple_plugin
 include(ArtDictionary)
 include(ArtMake)
@@ -92,10 +99,9 @@ add_subdirectory(sbndcode)
 # subdirectory for test code
 add_subdirectory(test)
 # ups - table and config files
-add_subdirectory(ups)
 # subdirectory for scripts
 add_subdirectory(bin)
 
 # packaging utility
-include(UseCPack)
 
+cet_cmake_config()
diff --git a/bin/v06_30_00-GeoToGeometry.py b/bin/v06_30_00-GeoToGeometry.py
index 2e0890a..4cd8a91 100755
--- a/bin/v06_30_00-GeoToGeometry.py
+++ b/bin/v06_30_00-GeoToGeometry.py
@@ -25,7 +25,7 @@ if __name__ == "__main__":
 
    Subst.AddFileNamePattern("CMakeLists.txt")
 
-   Subst.AddWord         ("sbndcode_Geo", "sbndcode_Geometry")
+   Subst.AddWord         ("sbndcode::Geo", "sbndcode_Geometry")
 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
    # C++ source code (including modules and services)
diff --git a/sbndcode/AnalysisTree/CMakeLists.txt b/sbndcode/AnalysisTree/CMakeLists.txt
index 11898ee..e03b586 100644
--- a/sbndcode/AnalysisTree/CMakeLists.txt
+++ b/sbndcode/AnalysisTree/CMakeLists.txt
@@ -1,30 +1,30 @@
 
-art_make(
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-			   larreco_Calorimetry
-                           larreco_RecoAlg
-                           lardata_RecoObjects  
-                           larpandora_LArPandoraInterface
-                           sbndcode_CRTUtils
-                           sbndcode_CRT
-                           sbnobj_Common_CRT
-                           nusimdata_SimulationBase
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          MODULE_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+			   larreco::Calorimetry
+                           larreco::RecoAlg
+                           lardata::RecoObjects  
+                           larpandora::LArPandoraInterface
+                           sbndcode::CRTUtils
+                           sbndcode::CRT
+                           sbnobj::Common_CRT
+                           nusimdata::SimulationBase
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            
                            ${FHICLCPP}
@@ -32,8 +32,8 @@ art_make(
                            ${ROOT_XMLIO}
                            ${ROOT_GDML}
                            ${ROOT_BASIC_LIB_LIST}
-                           sbndcode_RecoUtils
-                           sbndcode_OpDetSim
+                           sbndcode::RecoUtils
+                           sbndcode::OpDetSim
         )
 
 # install_headers()
diff --git a/sbndcode/CMakeLists.txt b/sbndcode/CMakeLists.txt
index 26e3a89..322089c 100644
--- a/sbndcode/CMakeLists.txt
+++ b/sbndcode/CMakeLists.txt
@@ -1,5 +1,5 @@
-cet_find_library( BOOST_SERIALIZATION NAMES boost_serialization PATHS ENV BOOST_LIB NO_DEFAULT_PATH )
-cet_find_library( BOOST_DATE_TIME     NAMES boost_date_time     PATHS ENV BOOST_LIB NO_DEFAULT_PATH )
+cet_find_library( BOOST_SERIALIZATION NAMES boost_serialization PATHS ENV BOOST_LIB NO_DEFAULT_PATH ) ### MIGRATE-ACTION-RECOMMENDED: use of ENV ... may be UPS-dependent ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
+cet_find_library( BOOST_DATE_TIME     NAMES boost_date_time     PATHS ENV BOOST_LIB NO_DEFAULT_PATH ) ### MIGRATE-ACTION-RECOMMENDED: use of ENV ... may be UPS-dependent ### MIGRATE-ACTION-RECOMMENDED: use cet_find_package() with target semantics for linking
 
 add_subdirectory(JobConfigurations)
 add_subdirectory(LArSoftConfigurations)
diff --git a/sbndcode/CRT/CMakeLists.txt b/sbndcode/CRT/CMakeLists.txt
index ebca9a7..506154d 100644
--- a/sbndcode/CRT/CMakeLists.txt
+++ b/sbndcode/CRT/CMakeLists.txt
@@ -1,13 +1,13 @@
-include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
-include_directories( $ENV{NUTOOLS_INC} )
-include_directories( $ENV{IFDHX_FQ_DIR}/inc )
+include_directories( ${CMAKE_CURRENT_SOURCE_DIR} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories( $ENV{NUTOOLS_INC} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories( $ENV{IFDHX_FQ_DIR}/inc ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
 add_subdirectory(CRTTools)
 add_subdirectory(CRTUtils)
 add_subdirectory(CRTAna)
 add_subdirectory(Examples)
 
-art_make( 
+art_make(  ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
     EXCLUDE
         CRTChannelMapAlg.cxx
         CRTGeometryHelper_service.cc
@@ -16,16 +16,16 @@ art_make(
         CRTTzeroProducer_module.cc
         CRTTrackProducer_module.cc
     LIBRARY_NAME
-        sbndcode_CRTData
+        sbndcode::CRTData
     LIB_LIBRARIES
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        lardataobj_RecoBase
-        ${ART_FRAMEWORK_CORE}
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        lardataobj::RecoBase
+        art::Framework_Core
         ${ART_FRAMEWORK_IO_SOURCES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        canvas
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
+        art::Framework_Principal
+        canvas::canvas
+        art::Framework_Services_Registry
         ${MF_MESSAGELOGGER}
         
         ${FHICLCPP}
@@ -34,13 +34,13 @@ art_make(
         ${CETLIB}
 )
 
-art_make_library( LIBRARY_NAME sbndcode_CRT
+art_make_library( LIBRARY_NAME sbndcode::CRT
     SOURCE
         CRTChannelMapAlg.cxx
     LIBRARIES 
-        larcorealg_Geometry
-        sbndcode_CRTData
-        cetlib_except
+        larcorealg::Geometry
+        sbndcode::CRTData
+        cetlib_except::cetlib_except
         ${MF_MESSAGELOGGER}
         
         ${FHICLCPP}
@@ -50,14 +50,14 @@ art_make_library( LIBRARY_NAME sbndcode_CRT
 )
 
 simple_plugin( CRTGeometryHelper service
-        larcorealg_Geometry
-        sbndcode_CRT
-        ${ART_FRAMEWORK_CORE}
+        larcorealg::Geometry
+        sbndcode::CRT
+        art::Framework_Core
         ${ART_FRAMEWORK_IO_SOURCES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        canvas
-        cetlib_except
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
+        art::Framework_Principal
+        canvas::canvas
+        cetlib_except::cetlib_except
+        art::Framework_Services_Registry
         ${MF_MESSAGELOGGER}
         
         ${ROOT_BASIC_LIB_LIST}
@@ -65,20 +65,20 @@ simple_plugin( CRTGeometryHelper service
 )
 
 simple_plugin( CRTDetSim module
-        larcorealg_Geometry
-        sbndcode_CRT
-        sbndcode_CRTData
-        sbnobj_SBND_CRT
-        sbnobj_Common_CRT
-        ${ART_FRAMEWORK_CORE}
+        larcorealg::Geometry
+        sbndcode::CRT
+        sbndcode::CRTData
+        sbnobj::SBND_CRT
+        sbnobj::Common_CRT
+        art::Framework_Core
         ${ART_FRAMEWORK_IO_SOURCES}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Principal
 	${ART_PERSISTENCY_PROVENANCE}
-        canvas
-        cetlib_except
-        lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-        nurandom_RandomUtils_NuRandomService_service
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
+        canvas::canvas
+        cetlib_except::cetlib_except
+        lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+        nurandom::RandomUtils_NuRandomService_service
+        art::Framework_Services_Registry
         ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
@@ -88,23 +88,23 @@ simple_plugin( CRTDetSim module
 )
 
 simple_plugin( CRTSimHitProducer module
-        larcorealg_Geometry
-        sbndcode_CRT
-        sbndcode_CRTData
-        sbnobj_Common_CRT
-        sbndcode_CRTUtils
-        sbndcode_GeoWrappers
-        ${ART_FRAMEWORK_CORE}
+        larcorealg::Geometry
+        sbndcode::CRT
+        sbndcode::CRTData
+        sbnobj::Common_CRT
+        sbndcode::CRTUtils
+        sbndcode::GeoWrappers
+        art::Framework_Core
         ${ART_FRAMEWORK_IO_SOURCES}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Principal
 	${ART_PERSISTENCY_PROVENANCE}
-        canvas
-        cetlib_except
-        lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-        nurandom_RandomUtils_NuRandomService_service
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
+        canvas::canvas
+        cetlib_except::cetlib_except
+        lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+        nurandom::RandomUtils_NuRandomService_service
+        art::Framework_Services_Registry
         ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}
+	art_root_io::TFileService_service
         ${MF_MESSAGELOGGER}
         ${ROOT_BASIC_LIB_LIST}
         ${CLHEP}
@@ -112,23 +112,23 @@ simple_plugin( CRTSimHitProducer module
 )
 
 simple_plugin(CRTTrackProducer module
-        larcorealg_Geometry
-        sbndcode_CRT
-        sbndcode_CRTData
-        sbnobj_Common_CRT
-        sbndcode_CRTUtils
-        sbndcode_GeoWrappers
-        ${ART_FRAMEWORK_CORE}
+        larcorealg::Geometry
+        sbndcode::CRT
+        sbndcode::CRTData
+        sbnobj::Common_CRT
+        sbndcode::CRTUtils
+        sbndcode::GeoWrappers
+        art::Framework_Core
         ${ART_FRAMEWORK_IO_SOURCES}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Principal
 	${ART_PERSISTENCY_PROVENANCE}
-        canvas
-        cetlib_except
-        lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-        nurandom_RandomUtils_NuRandomService_service
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
+        canvas::canvas
+        cetlib_except::cetlib_except
+        lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+        nurandom::RandomUtils_NuRandomService_service
+        art::Framework_Services_Registry
         ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}
+	art_root_io::TFileService_service
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${ROOT_BASIC_LIB_LIST}
@@ -137,21 +137,21 @@ simple_plugin(CRTTrackProducer module
 )
 
 simple_plugin(CRTTzeroProducer module
-        larcorealg_Geometry
-        sbndcode_CRT
-        sbndcode_CRTData
-        sbnobj_Common_CRT
-        ${ART_FRAMEWORK_CORE}
+        larcorealg::Geometry
+        sbndcode::CRT
+        sbndcode::CRTData
+        sbnobj::Common_CRT
+        art::Framework_Core
         ${ART_FRAMEWORK_IO_SOURCES}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Principal
 	${ART_PERSISTENCY_PROVENANCE}
-        canvas
-        cetlib_except
-        lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-        nurandom_RandomUtils_NuRandomService_service
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
+        canvas::canvas
+        cetlib_except::cetlib_except
+        lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+        nurandom::RandomUtils_NuRandomService_service
+        art::Framework_Services_Registry
         ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}
+	art_root_io::TFileService_service
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${ROOT_BASIC_LIB_LIST}
diff --git a/sbndcode/CRT/CRTAna/CMakeLists.txt b/sbndcode/CRT/CRTAna/CMakeLists.txt
index 8c2ef71..f1eeb22 100644
--- a/sbndcode/CRT/CRTAna/CMakeLists.txt
+++ b/sbndcode/CRT/CRTAna/CMakeLists.txt
@@ -1,26 +1,26 @@
 
-art_make(
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardataobj_AnalysisBase
-                           lardata_RecoObjects
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          MODULE_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardataobj::AnalysisBase
+                           lardata::RecoObjects
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            ${MF_UTILITIES}
                            ${FHICLCPP}
@@ -31,11 +31,11 @@ art_make(
                            ${ROOT_SPECTRUM}
                            ${ROOT_ROOFIT}
                            ${ROOT_ROOFITCORE} 
-                           sbndcode_RecoUtils
-                           sbndcode_CRT
-                           sbnobj_Common_CRT
-                           sbndcode_CRTUtils
-                           sbndcode_GeoWrappers
+                           sbndcode::RecoUtils
+                           sbndcode::CRT
+                           sbnobj::Common_CRT
+                           sbndcode::CRTUtils
+                           sbndcode::GeoWrappers
         )
 
 install_headers()
diff --git a/sbndcode/CRT/CRTTools/CMakeLists.txt b/sbndcode/CRT/CRTTools/CMakeLists.txt
index 8c2ef71..f1eeb22 100644
--- a/sbndcode/CRT/CRTTools/CMakeLists.txt
+++ b/sbndcode/CRT/CRTTools/CMakeLists.txt
@@ -1,26 +1,26 @@
 
-art_make(
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardataobj_AnalysisBase
-                           lardata_RecoObjects
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          MODULE_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardataobj::AnalysisBase
+                           lardata::RecoObjects
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            ${MF_UTILITIES}
                            ${FHICLCPP}
@@ -31,11 +31,11 @@ art_make(
                            ${ROOT_SPECTRUM}
                            ${ROOT_ROOFIT}
                            ${ROOT_ROOFITCORE} 
-                           sbndcode_RecoUtils
-                           sbndcode_CRT
-                           sbnobj_Common_CRT
-                           sbndcode_CRTUtils
-                           sbndcode_GeoWrappers
+                           sbndcode::RecoUtils
+                           sbndcode::CRT
+                           sbnobj::Common_CRT
+                           sbndcode::CRTUtils
+                           sbndcode::GeoWrappers
         )
 
 install_headers()
diff --git a/sbndcode/CRT/CRTUtils/CMakeLists.txt b/sbndcode/CRT/CRTUtils/CMakeLists.txt
index 24b33c1..d94b8a2 100644
--- a/sbndcode/CRT/CRTUtils/CMakeLists.txt
+++ b/sbndcode/CRT/CRTUtils/CMakeLists.txt
@@ -1,26 +1,26 @@
-art_make(    LIBRARY_NAME sbndcode_CRTUtils
-             LIB_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardata_RecoObjects  
-                           lardataalg_DetectorInfo
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           cetlib cetlib_except
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make(    LIBRARY_NAME sbndcode::CRTUtils ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+             LIB_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardata::RecoObjects  
+                           lardataalg::DetectorInfo
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           cetlib::cetlib cetlib_except::cetlib_except
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            
                            ${FHICLCPP}
@@ -29,11 +29,11 @@ art_make(    LIBRARY_NAME sbndcode_CRTUtils
                            ${ROOT_GDML}
                            ${ROOT_BASIC_LIB_LIST}
                            ${Boost_SYSTEM_LIBRARY}
-                           sbndcode_CRT
-                           sbnobj_Common_CRT
-                           sbnobj_SBND_CRT
-                           sbndcode_GeoWrappers
-                           sbndcode_RecoUtils
+                           sbndcode::CRT
+                           sbnobj::Common_CRT
+                           sbnobj::SBND_CRT
+                           sbndcode::GeoWrappers
+                           sbndcode::RecoUtils
         )
 
 install_headers()
diff --git a/sbndcode/CRT/CRTUtils/CRTEventDisplay.cc b/sbndcode/CRT/CRTUtils/CRTEventDisplay.cc
index 17e31ff..190b42a 100644
--- a/sbndcode/CRT/CRTUtils/CRTEventDisplay.cc
+++ b/sbndcode/CRT/CRTUtils/CRTEventDisplay.cc
@@ -132,7 +132,7 @@ void CRTEventDisplay::DrawCube(TCanvas *c1, double *rmin, double *rmax, int colo
 
 void CRTEventDisplay::Draw(detinfo::DetectorClocksData const& clockData,
                            const art::Event& event){
-  // Create a canvas 
+  // Create a canvas::canvas 
   TCanvas *c1 = new TCanvas("c1","",700,700);
 
   // Draw the CRT taggers
diff --git a/sbndcode/CRT/Examples/CMakeLists.txt b/sbndcode/CRT/Examples/CMakeLists.txt
index 8c2ef71..f1eeb22 100644
--- a/sbndcode/CRT/Examples/CMakeLists.txt
+++ b/sbndcode/CRT/Examples/CMakeLists.txt
@@ -1,26 +1,26 @@
 
-art_make(
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardataobj_AnalysisBase
-                           lardata_RecoObjects
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          MODULE_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardataobj::AnalysisBase
+                           lardata::RecoObjects
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            ${MF_UTILITIES}
                            ${FHICLCPP}
@@ -31,11 +31,11 @@ art_make(
                            ${ROOT_SPECTRUM}
                            ${ROOT_ROOFIT}
                            ${ROOT_ROOFITCORE} 
-                           sbndcode_RecoUtils
-                           sbndcode_CRT
-                           sbnobj_Common_CRT
-                           sbndcode_CRTUtils
-                           sbndcode_GeoWrappers
+                           sbndcode::RecoUtils
+                           sbndcode::CRT
+                           sbnobj::Common_CRT
+                           sbndcode::CRTUtils
+                           sbndcode::GeoWrappers
         )
 
 install_headers()
diff --git a/sbndcode/Calibration/CMakeLists.txt b/sbndcode/Calibration/CMakeLists.txt
index 6f3ded5..c9d0098 100644
--- a/sbndcode/Calibration/CMakeLists.txt
+++ b/sbndcode/Calibration/CMakeLists.txt
@@ -1,50 +1,52 @@
 add_subdirectory(tools)
 
-art_make(MODULE_LIBRARIES
-			larcore_Geometry_Geometry_service
-                        lardata_Utilities
-			lardata_ArtDataHelper
-                        lardataobj_RawData
-                        lardataobj_RecoBase
-                        sbndcode_Utilities_SignalShapingServiceSBND_service
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-			art_Utilities			
-                        canvas
+art_make(MODULE_LIBRARIES ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+			larcore::Geometry_Geometry_service
+                        lardata::Utilities
+			lardata::ArtDataHelper
+                        lardataobj::RawData
+                        lardataobj::RecoBase
+                        sbndcode::Utilities_SignalShapingServiceSBND_service
+                        art::Framework_Core
+                        art::Framework_Principal
+                        art::Framework_Services_Registry
+                        art_root_io::tfile_support
+                        art_root_io::TFileService_service
+			art::Utilities			
+                        canvas::canvas
                         ${MF_MESSAGELOGGER}
                         
                         ${FHICLCPP}
-                        cetlib cetlib_except
-                        ${ROOT_GEOM}
-                        ${ROOT_XMLIO}
-                        ${ROOT_GDML}
-                        ${ROOT_BASIC_LIB_LIST}
+                        cetlib::cetlib cetlib_except::cetlib_except
+                        ROOT::Geom
+                        ROOT::XMLIO
+                        ROOT::Gdml
+                        ROOT::Core
+                        ROOT::Tree
 
 TOOL_LIBRARIES
-			larcore_Geometry_Geometry_service
-			lardata_Utilities
-                        lardata_ArtDataHelper
-                        lardataobj_RawData
-                        lardataobj_RecoBase
-                        sbndcode_Utilities_SignalShapingServiceSBND_service
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-			art_Utilities			
-                        canvas
+			larcore::Geometry_Geometry_service
+			lardata::Utilities
+                        lardata::ArtDataHelper
+                        lardataobj::RawData
+                        lardataobj::RecoBase
+                        sbndcode::Utilities_SignalShapingServiceSBND_service
+                        art::Framework_Core
+                        art::Framework_Principal
+                        art::Framework_Services_Registry
+                        art_root_io::tfile_support
+                        art_root_io::TFileService_service
+			art::Utilities			
+                        canvas::canvas
                         ${MF_MESSAGELOGGER}
 
                         ${FHICLCPP}
-                        cetlib cetlib_except
-                        ${ROOT_GEOM}
-                        ${ROOT_XMLIO}
-                        ${ROOT_GDML}
-                        ${ROOT_BASIC_LIB_LIST}
+                        cetlib::cetlib cetlib_except::cetlib_except
+                        ROOT::Geom
+                        ROOT::XMLIO
+                        ROOT::Gdml
+                        ROOT::Core
+                        ROOT::Tree
 )
 
 install_headers()
diff --git a/sbndcode/Calibration/tools/CMakeLists.txt b/sbndcode/Calibration/tools/CMakeLists.txt
index 8851ea5..406d513 100644
--- a/sbndcode/Calibration/tools/CMakeLists.txt
+++ b/sbndcode/Calibration/tools/CMakeLists.txt
@@ -1,38 +1,38 @@
 cet_enable_asserts()
 
-include_directories($ENV{EIGEN_INC})
+include_directories($ENV{EIGEN_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
-art_make( TOOL_LIBRARIES lardataobj_RecoBase
-                         lardataobj_Simulation
-                         larcorealg_Geometry
-                         larcore_Geometry_Geometry_service
-                         lardata_RecoObjects
-                         lardata_Utilities
-                         nusimdata_SimulationBase
-                         larsim_Simulation
-                         nusimdata_SimulationBase
-                         nuevdb_EventDisplayBase
-                         ${ART_FRAMEWORK_CORE}
-                         ${ART_FRAMEWORK_PRINCIPAL}
-                         ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                         ${ART_FRAMEWORK_SERVICES_BASIC}
-                         ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                         ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                         ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                         art_Persistency_Common
-                         art_Persistency_Provenance
-                         art_Utilities
-                         canvas
+art_make( TOOL_LIBRARIES lardataobj::RecoBase ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+                         lardataobj::Simulation
+                         larcorealg::Geometry
+                         larcore::Geometry_Geometry_service
+                         lardata::RecoObjects
+                         lardata::Utilities
+                         nusimdata::SimulationBase
+                         larsim::Simulation
+                         nusimdata::SimulationBase
+                         nuevdb::EventDisplayBase
+                         art::Framework_Core
+                         art::Framework_Principal
+                         art::Framework_Services_Registry
+                         art_root_io::tfile_support
+                         art_root_io::TFileService_service
+                         art::Framework_Services_Optional_RandomNumberGenerator_service
+                         art::Persistency_Common
+                         art::Persistency_Provenance
+                         art::Utilities
+                         canvas::canvas
                          ${MF_MESSAGELOGGER}
                          ${MF_UTILITIES}
                          ${FHICLCPP}
                          ${CETLIB}
-                         cetlib_except
-                         ${Boost_FILESYSTEM_LIBRARY}
-                         ${Boost_SYSTEM_LIBRARY}
-                         ${CLHEP}
-                         ${ROOT_BASIC_LIB_LIST}
-                         ${ROOT_MINUIT}
+                         Eigen3::Eigen
+                         cetlib_except::cetlib_except
+                         Boost::filesystem
+                         Boost::system
+                         CLHEP::CLHEP
+                         ROOT::Core
+                         ROOT::Minuit
         )
 
 install_headers()
diff --git a/sbndcode/Commissioning/CMakeLists.txt b/sbndcode/Commissioning/CMakeLists.txt
index a451b5c..002be8c 100644
--- a/sbndcode/Commissioning/CMakeLists.txt
+++ b/sbndcode/Commissioning/CMakeLists.txt
@@ -1,30 +1,30 @@
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
    MODULE_LIBRARIES
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        larsim_Simulation lardataobj_Simulation
-        larsim_MCCheater_BackTrackerService_service
-        larsim_MCCheater_ParticleInventoryService_service
-        lardata_Utilities
-        larevt_Filters
-        lardataobj_RawData
-        lardataobj_RecoBase
-        larreco_RecoAlg
-        lardata_RecoObjects  
-        larpandora_LArPandoraInterface
-        sbndcode_CRTUtils
-        sbndcode_CRT
-        sbnobj_Common_CRT
-        nusimdata_SimulationBase
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-        art_Persistency_Common canvas
-        art_Persistency_Provenance canvas
-        art_Utilities canvas
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        larsim::Simulation lardataobj::Simulation
+        larsim::MCCheater_BackTrackerService_service
+        larsim::MCCheater_ParticleInventoryService_service
+        lardata::Utilities
+        larevt::Filters
+        lardataobj::RawData
+        lardataobj::RecoBase
+        larreco::RecoAlg
+        lardata::RecoObjects  
+        larpandora::LArPandoraInterface
+        sbndcode::CRTUtils
+        sbndcode::CRT
+        sbnobj::Common_CRT
+        nusimdata::SimulationBase
+        art::Framework_Core
+        art::Framework_Principal
+        art::Framework_Services_Registry
+        art_root_io::tfile_support ${ROOT_CORE}
+        art_root_io::TFileService_service
+        art::Persistency_Common canvas::canvas
+        art::Persistency_Provenance canvas::canvas
+        art::Utilities canvas::canvas
         ${MF_MESSAGELOGGER}
         
         ${FHICLCPP}
@@ -32,8 +32,8 @@ art_make(
         ${ROOT_XMLIO}
         ${ROOT_GDML}
         ${ROOT_BASIC_LIB_LIST}
-        sbndcode_RecoUtils
-        sbndcode_OpDetSim
+        sbndcode::RecoUtils
+        sbndcode::OpDetSim
 )
 
 install_fhicl()
diff --git a/sbndcode/CosmicId/Algs/CMakeLists.txt b/sbndcode/CosmicId/Algs/CMakeLists.txt
index f3bc182..ad7903c 100644
--- a/sbndcode/CosmicId/Algs/CMakeLists.txt
+++ b/sbndcode/CosmicId/Algs/CMakeLists.txt
@@ -1,25 +1,25 @@
-art_make(    LIBRARY_NAME sbndcode_CosmicIdAlgs
-             LIB_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardata_RecoObjects  
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           cetlib cetlib_except
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make(    LIBRARY_NAME sbndcode::CosmicIdAlgs ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+             LIB_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardata::RecoObjects  
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           cetlib::cetlib cetlib_except::cetlib_except
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            
                            ${FHICLCPP}
@@ -28,10 +28,10 @@ art_make(    LIBRARY_NAME sbndcode_CosmicIdAlgs
                            ${ROOT_GDML}
                            ${ROOT_BASIC_LIB_LIST}
                            ${Boost_SYSTEM_LIBRARY}
-                           sbndcode_CRT
-                           sbndcode_CRTUtils
-                           sbnobj_Common_CRT
-                           sbndcode_CosmicIdUtils
+                           sbndcode::CRT
+                           sbndcode::CRTUtils
+                           sbnobj::Common_CRT
+                           sbndcode::CosmicIdUtils
         )
 
 install_headers()
diff --git a/sbndcode/CosmicId/Ana/CMakeLists.txt b/sbndcode/CosmicId/Ana/CMakeLists.txt
index a518232..14ed153 100644
--- a/sbndcode/CosmicId/Ana/CMakeLists.txt
+++ b/sbndcode/CosmicId/Ana/CMakeLists.txt
@@ -1,26 +1,26 @@
 
-art_make(
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardataobj_AnalysisBase
-                           lardata_RecoObjects
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          MODULE_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardataobj::AnalysisBase
+                           lardata::RecoObjects
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            ${MF_UTILITIES}
                            ${FHICLCPP}
@@ -31,13 +31,13 @@ art_make(
                            ${ROOT_SPECTRUM}
                            ${ROOT_ROOFIT}
                            ${ROOT_ROOFITCORE} 
-                           sbndcode_RecoUtils
-                           sbndcode_CRT
-                           sbndcode_CRTUtils
-                           sbndcode_GeoWrappers
-                           sbndcode_CosmicIdAlgs
-                           sbndcode_CosmicIdUtils
-                           larreco_RecoAlg
+                           sbndcode::RecoUtils
+                           sbndcode::CRT
+                           sbndcode::CRTUtils
+                           sbndcode::GeoWrappers
+                           sbndcode::CosmicIdAlgs
+                           sbndcode::CosmicIdUtils
+                           larreco::RecoAlg
         )
 
 install_headers()
diff --git a/sbndcode/CosmicId/CMakeLists.txt b/sbndcode/CosmicId/CMakeLists.txt
index 5013cea..f9e2d11 100644
--- a/sbndcode/CosmicId/CMakeLists.txt
+++ b/sbndcode/CosmicId/CMakeLists.txt
@@ -3,28 +3,28 @@ add_subdirectory(Utils)
 add_subdirectory(Algs)
 add_subdirectory(Ana)
 
-art_make(
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardataobj_AnalysisBase
-                           lardata_RecoObjects
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          MODULE_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardataobj::AnalysisBase
+                           lardata::RecoObjects
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            ${MF_UTILITIES}
                            ${FHICLCPP}
@@ -36,13 +36,13 @@ art_make(
                            ${ROOT_SPECTRUM}
                            ${ROOT_ROOFIT}
                            ${ROOT_ROOFITCORE} 
-                           sbndcode_RecoUtils
-                           sbndcode_CosmicIdUtils
-                           sbndcode_CosmicIdAlgs
-                           sbndcode_CRTUtils
-                           sbndcode_CRT
-                           sbnobj_Common_CRT
-                           larreco_RecoAlg
+                           sbndcode::RecoUtils
+                           sbndcode::CosmicIdUtils
+                           sbndcode::CosmicIdAlgs
+                           sbndcode::CRTUtils
+                           sbndcode::CRT
+                           sbnobj::Common_CRT
+                           larreco::RecoAlg
         )
 
 install_headers()
diff --git a/sbndcode/CosmicId/Utils/CMakeLists.txt b/sbndcode/CosmicId/Utils/CMakeLists.txt
index 4e2c49f..8853c0d 100644
--- a/sbndcode/CosmicId/Utils/CMakeLists.txt
+++ b/sbndcode/CosmicId/Utils/CMakeLists.txt
@@ -1,25 +1,25 @@
-art_make(    LIBRARY_NAME sbndcode_CosmicIdUtils
-             LIB_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardata_RecoObjects  
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           cetlib cetlib_except
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make(    LIBRARY_NAME sbndcode::CosmicIdUtils ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+             LIB_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardata::RecoObjects  
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           cetlib::cetlib cetlib_except::cetlib_except
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            
                            ${FHICLCPP}
@@ -28,9 +28,9 @@ art_make(    LIBRARY_NAME sbndcode_CosmicIdUtils
                            ${ROOT_GDML}
                            ${ROOT_BASIC_LIB_LIST}
                            ${Boost_SYSTEM_LIBRARY}
-                           sbndcode_CRT
-                           sbnobj_Common_CRT
-                           sbndcode_CRTUtils
+                           sbndcode::CRT
+                           sbnobj::Common_CRT
+                           sbndcode::CRTUtils
         )
 
 install_headers()
diff --git a/sbndcode/DetectorSim/CMakeLists.txt b/sbndcode/DetectorSim/CMakeLists.txt
index b067294..ecbefcd 100644
--- a/sbndcode/DetectorSim/CMakeLists.txt
+++ b/sbndcode/DetectorSim/CMakeLists.txt
@@ -1,21 +1,21 @@
 
 simple_plugin(SimWireSBND "module"
-                           larcore_Geometry_Geometry_service
-                           lardataobj_Simulation
-                           lardata_Utilities
-                           lardataobj_RawData
-                           lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-                           sbndcode_Utilities_SignalShapingServiceSBND_service
-                           nurandom_RandomUtils_NuRandomService_service
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
+                           larcore::Geometry_Geometry_service
+                           lardataobj::Simulation
+                           lardata::Utilities
+                           lardataobj::RawData
+                           lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+                           sbndcode::Utilities_SignalShapingServiceSBND_service
+                           nurandom::RandomUtils_NuRandomService_service
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art_root_io::TFileService_service
                            ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                           canvas
+                           canvas::canvas
                            ${MF_MESSAGELOGGER}
                            
                            ${FHICLCPP}
-                           cetlib cetlib_except
+                           cetlib::cetlib cetlib_except::cetlib_except
                            ${CLHEP}
                            ${ROOT_BASIC_LIB_LIST}
 			   
diff --git a/sbndcode/DetectorSim/Services/CMakeLists.txt b/sbndcode/DetectorSim/Services/CMakeLists.txt
index 38337b8..b656c70 100644
--- a/sbndcode/DetectorSim/Services/CMakeLists.txt
+++ b/sbndcode/DetectorSim/Services/CMakeLists.txt
@@ -4,42 +4,42 @@ simple_plugin(SBNDNoNoiseService   "service"
 
 simple_plugin(SBNDThermalNoiseServiceInTime   "service"                                                           
                 
-		larcorealg_Geometry
-		sbndcode_Utilities_SignalShapingServiceSBND_service
-		${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-		${ART_ROOT_IO_TFILESERVICE_SERVICE}
-		nurandom_RandomUtils_NuRandomService_service
-		${ART_FRAMEWORK_CORE}
-		art_Utilities canvas
-		cetlib cetlib_except
+		larcorealg::Geometry
+		sbndcode::Utilities_SignalShapingServiceSBND_service
+		art_root_io::tfile_support ${ROOT_CORE}
+		art_root_io::TFileService_service
+		nurandom::RandomUtils_NuRandomService_service
+		art::Framework_Core
+		art::Utilities canvas::canvas
+		cetlib::cetlib cetlib_except::cetlib_except
 		${CLHEP}
  		${ROOT_BASIC_LIB_LIST}                                                                                                                   
 )
 
 simple_plugin(SBNDThermalNoiseServiceInFreq   "service"               
                 
-		larcorealg_Geometry
-		sbndcode_Utilities_SignalShapingServiceSBND_service
-		${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-		${ART_ROOT_IO_TFILESERVICE_SERVICE}
-		nurandom_RandomUtils_NuRandomService_service
-		${ART_FRAMEWORK_CORE}
-		art_Utilities canvas
-		cetlib cetlib_except
+		larcorealg::Geometry
+		sbndcode::Utilities_SignalShapingServiceSBND_service
+		art_root_io::tfile_support ${ROOT_CORE}
+		art_root_io::TFileService_service
+		nurandom::RandomUtils_NuRandomService_service
+		art::Framework_Core
+		art::Utilities canvas::canvas
+		cetlib::cetlib cetlib_except::cetlib_except
 		${CLHEP}
  		${ROOT_BASIC_LIB_LIST}                                                                                                                   
 )      
 
 simple_plugin(SBNDuBooNEDataDrivenNoiseService   "service"                                                           
                 
-		larcorealg_Geometry
-		sbndcode_Utilities_SignalShapingServiceSBND_service
-		${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-		${ART_ROOT_IO_TFILESERVICE_SERVICE}
-		nurandom_RandomUtils_NuRandomService_service
-		${ART_FRAMEWORK_CORE}
-		art_Utilities canvas
-		cetlib cetlib_except
+		larcorealg::Geometry
+		sbndcode::Utilities_SignalShapingServiceSBND_service
+		art_root_io::tfile_support ${ROOT_CORE}
+		art_root_io::TFileService_service
+		nurandom::RandomUtils_NuRandomService_service
+		art::Framework_Core
+		art::Utilities canvas::canvas
+		cetlib::cetlib cetlib_except::cetlib_except
 		${CLHEP}
  		${ROOT_BASIC_LIB_LIST}                                                                                                                   
 )      
diff --git a/sbndcode/Filters/CMakeLists.txt b/sbndcode/Filters/CMakeLists.txt
index 80f694f..d5e146e 100644
--- a/sbndcode/Filters/CMakeLists.txt
+++ b/sbndcode/Filters/CMakeLists.txt
@@ -1,30 +1,30 @@
 
-art_make(
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardata_RecoObjects 
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           sbndcode_CRT
-                           sbndcode_CRTData
-                           sbnobj_Common_CRT
-                           sbndcode_CRTUtils
-                           ${ART_FRAMEWORK_CORE}
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          MODULE_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardata::RecoObjects 
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           sbndcode::CRT
+                           sbndcode::CRTData
+                           sbnobj::Common_CRT
+                           sbndcode::CRTUtils
+                           art::Framework_Core
                            ${ART_FRAMEWORK_MODULES}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
                            ${ART_FRAMEWORK_SERVICES_OPTIONAL}
                            ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            ${MF_UTILITIES}
                            ${FHICLCPP}
@@ -32,7 +32,7 @@ art_make(
                            ${ROOT_XMLIO}
                            ${ROOT_GDML}
                            ${ROOT_BASIC_LIB_LIST}
-                           sbndcode_RecoUtils
+                           sbndcode::RecoUtils
         )
 
 install_headers()
diff --git a/sbndcode/Geometry/CMakeLists.txt b/sbndcode/Geometry/CMakeLists.txt
index 605d73d..74c147e 100644
--- a/sbndcode/Geometry/CMakeLists.txt
+++ b/sbndcode/Geometry/CMakeLists.txt
@@ -1,18 +1,18 @@
-art_make(
-          LIB_LIBRARIES larcorealg_Geometry
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+          LIB_LIBRARIES larcorealg::Geometry
                         ${MF_MESSAGELOGGER}
-                        cetlib
-                        cetlib_except
-                        ${FHICLCPP}
+                        cetlib::cetlib
+                        cetlib_except::cetlib_except
+                        fhiclcpp::fhiclcpp
                         ${ROOT_BASIC_LIB_LIST}
                         ${ROOT_GEOM}
           SERVICE_LIBRARIES
-                        sbndcode_Geometry
-                        larcorealg_Geometry
-                        art_Framework_Services_Registry
-                        canvas
-                        ${FHICLCPP}
-                        cetlib_except
+                        sbndcode::Geometry
+                        larcorealg::Geometry
+                        art::Framework_Services_Registry
+                        canvas::canvas
+                        fhiclcpp::fhiclcpp
+                        cetlib_except::cetlib_except
                         ${ROOT_CORE}
         )
 
diff --git a/sbndcode/Geometry/GeometryWrappers/CMakeLists.txt b/sbndcode/Geometry/GeometryWrappers/CMakeLists.txt
index aeb6ee4..df7a0c3 100644
--- a/sbndcode/Geometry/GeometryWrappers/CMakeLists.txt
+++ b/sbndcode/Geometry/GeometryWrappers/CMakeLists.txt
@@ -1,25 +1,25 @@
-art_make(    LIBRARY_NAME sbndcode_GeoWrappers
-             LIB_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardata_RecoObjects  
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           cetlib cetlib_except
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make(    LIBRARY_NAME sbndcode::GeoWrappers ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+             LIB_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardata::RecoObjects  
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           cetlib::cetlib cetlib_except::cetlib_except
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance
+                           art::Utilities 
                            ${MF_MESSAGELOGGER}
                            
                            ${FHICLCPP}
diff --git a/sbndcode/Geometry/gdml/GDMLSchema/CMakeLists.txt b/sbndcode/Geometry/gdml/GDMLSchema/CMakeLists.txt
index bbf0035..6851239 100644
--- a/sbndcode/Geometry/gdml/GDMLSchema/CMakeLists.txt
+++ b/sbndcode/Geometry/gdml/GDMLSchema/CMakeLists.txt
@@ -1,3 +1,3 @@
 # install schema files
 file(GLOB gdml_schema *.xsd)
-install( FILES ${gdml_schema} DESTINATION ${${product}_gdml_dir}/GDMLSchema )
+install( FILES ${gdml_schema} DESTINATION ${${CETMODULES_CURRENT_PROJECT_NAME}_GDML_DIR}/GDMLSchema )
diff --git a/sbndcode/Geometry/gdml/RefactoredGDMLSchema/CMakeLists.txt b/sbndcode/Geometry/gdml/RefactoredGDMLSchema/CMakeLists.txt
index 8802941..070734b 100644
--- a/sbndcode/Geometry/gdml/RefactoredGDMLSchema/CMakeLists.txt
+++ b/sbndcode/Geometry/gdml/RefactoredGDMLSchema/CMakeLists.txt
@@ -1,3 +1,3 @@
 # install schema files
 file(GLOB gdml_schema *.xsd)
-install( FILES ${gdml_schema} DESTINATION ${${product}_gdml_dir}/RefactoredGDMLSchema )
+install( FILES ${gdml_schema} DESTINATION ${${CETMODULES_CURRENT_PROJECT_NAME}_GDML_DIR}/RefactoredGDMLSchema )
diff --git a/sbndcode/Geometry/gdml/preparse/CMakeLists.txt b/sbndcode/Geometry/gdml/preparse/CMakeLists.txt
index 8324545..c532f0e 100644
--- a/sbndcode/Geometry/gdml/preparse/CMakeLists.txt
+++ b/sbndcode/Geometry/gdml/preparse/CMakeLists.txt
@@ -1,6 +1,7 @@
 art_make_exec(NAME preparseGDML
   LIBRARIES
-    ${ROOT_BASIC_LIB_LIST}
+    ROOT::Core
+    ROOT::Hist
   )
 
 install_source()
diff --git a/sbndcode/JobConfigurations/standard/gen/genie/README.md b/sbndcode/JobConfigurations/standard/gen/genie/README.md
index 205b410..381be95 100644
--- a/sbndcode/JobConfigurations/standard/gen/genie/README.md
+++ b/sbndcode/JobConfigurations/standard/gen/genie/README.md
@@ -1,5 +1,5 @@
 # GENIE Event Generation
 
-There are several fhicl configurations for producing GENIE events. The are divided in several sub-directories `other_flux_config/flux_config*/`, depending on the type of flux files that are used as input. The flux configurations are described here: https://sbnsoftware.github.io/sbndcode_wiki/The_SBND_flux_files.html.
+There are several fhicl configurations for producing GENIE events. The are divided in several sub-directories `other_flux_config/flux_config*/`, depending on the type of flux files that are used as input. The flux configurations are described here: https://sbnsoftware.github.io/sbndcode::wiki/The_SBND_flux_files.html.
 
 If you are uncertain, use the fhicl files in this directory.
\ No newline at end of file
diff --git a/sbndcode/JobConfigurations/standard/gen/overlay/README.md b/sbndcode/JobConfigurations/standard/gen/overlay/README.md
index 7a0da3c..1c00106 100644
--- a/sbndcode/JobConfigurations/standard/gen/overlay/README.md
+++ b/sbndcode/JobConfigurations/standard/gen/overlay/README.md
@@ -1,5 +1,5 @@
 # GENIE+Cosmics Event Generation
 
-There are several fhicl configurations for producing GENIE events. The are divided in several sub-directories `other_flux_config/flux_config*/`, depending on the type of flux files that are used as input. The flux configurations are described here: https://sbnsoftware.github.io/sbndcode_wiki/The_SBND_flux_files.html.
+There are several fhicl configurations for producing GENIE events. The are divided in several sub-directories `other_flux_config/flux_config*/`, depending on the type of flux files that are used as input. The flux configurations are described here: https://sbnsoftware.github.io/sbndcode::wiki/The_SBND_flux_files.html.
 
 If you are uncertain, use the fhicl files in this directory.
diff --git a/sbndcode/LArG4/CMakeLists.txt b/sbndcode/LArG4/CMakeLists.txt
index bae1f68..70020bc 100644
--- a/sbndcode/LArG4/CMakeLists.txt
+++ b/sbndcode/LArG4/CMakeLists.txt
@@ -1,12 +1,12 @@
 add_subdirectory(PhysicsLists)
 
-include_directories($ENV{GEANT4_FQ_DIR}/include)
-include_directories($ENV{XERCES_C_INC})
+include_directories($ENV{GEANT4_FQ_DIR}/include) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories($ENV{XERCES_C_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
   MODULE_LIBRARIES
     ${ART_UTILITIES}
-    cetlib_except
+    cetlib_except::cetlib_except
     ${ROOT_CORE}
     ${ROOT_HIST}
     ${ROOT_PHYSICS}
@@ -25,7 +25,7 @@ art_make(
     ${G4PROCESSES}
     ${G4TRACK}
     ${G4RUN}
-    sbndcode_LArG4_PhysicsLists
+    sbndcode::LArG4_PhysicsLists
 
   LIB_LIBRARIES
     ${ART_UTILITIES}
@@ -48,10 +48,10 @@ art_make(
     ${G4PROCESSES}
     ${G4TRACK}
     ${G4RUN}
-    sbndcode_LArG4_PhysicsLists
+    sbndcode::LArG4_PhysicsLists
 
   SERVICE_LIBRARIES
-    ${ART_FRAMEWORK_CORE}
+    art::Framework_Core
 )
 
 install_headers()
diff --git a/sbndcode/LArG4/PhysicsLists/CMakeLists.txt b/sbndcode/LArG4/PhysicsLists/CMakeLists.txt
index 6a52799..7640b61 100644
--- a/sbndcode/LArG4/PhysicsLists/CMakeLists.txt
+++ b/sbndcode/LArG4/PhysicsLists/CMakeLists.txt
@@ -1,54 +1,33 @@
-include_directories($ENV{GEANT4_FQ_DIR}/include)
-include_directories($ENV{XERCES_C_INC})
+include_directories(${GEANT4_INCLUDE_DIRS}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories(${XERCES_C_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
   MODULE_LIBRARIES
-    ${ART_UTILITIES}
-    cetlib_except
-    ${ROOT_CORE}
-    ${ROOT_HIST}
-    ${ROOT_PHYSICS}
-    ${ROOT_GEOM}
-    ${ROOT_MATHCORE}
-    ${CLHEP}
-    ${G4DIGITS_HITS}
-    ${G4EVENT}
-    ${G4GEOMETRY}
-    ${G4GLOBAL}
-    ${G4GRAPHICS_REPS}
-    ${G4MATERIALS}
-    ${G4INTERCOMS}
-    ${G4PARTICLES}
-    ${G4PHYSICSLISTS}
-    ${G4PROCESSES}
-    ${G4TRACK}
-    ${G4RUN}
+    art::Utilities
+    cetlib_except::cetlib_except
+    ROOT::Core
+    ROOT::Hist
+    ROOT::Physics
+    ROOT::Geom
+    ROOT::MathCore
+    CLHEP::CLHEP
+    Geant4::G4run
+    Geant4::G4physicslists
 
   LIB_LIBRARIES
-    ${ART_UTILITIES}
-    cetlib_except
-    ${ROOT_CORE}
-    ${ROOT_HIST}
-    ${ROOT_PHYSICS}
-    ${ROOT_GEOM}
-    ${ROOT_MATHCORE}
-    ${CLHEP}
-    ${G4DIGITS_HITS}
-    ${G4EVENT}
-    ${G4GEOMETRY}
-    ${G4GLOBAL}
-    ${G4PHYSICSLISTS}
-    ${G4GRAPHICS_REPS}
-    ${G4MATERIALS}
-    ${G4INTERCOMS}
-    ${G4PARTICLES}
-    ${G4PHYSICSLISTS}
-    ${G4PROCESSES}
-    ${G4TRACK}
-    ${G4RUN}
+    art::Utilities
+    cetlib_except::cetlib_except
+    ROOT::Core
+    ROOT::Hist
+    ROOT::Physics
+    ROOT::Geom
+    ROOT::MathCore
+    CLHEP::CLHEP
+    Geant4::G4run
+    Geant4::G4physicslists
 
   SERVICE_LIBRARIES
-    ${ART_FRAMEWORK_CORE}
+    art::framework_core
 )
 
 install_headers()
diff --git a/sbndcode/LArSoftConfigurations/gen/set_flux_config_b.fcl b/sbndcode/LArSoftConfigurations/gen/set_flux_config_b.fcl
index 7c9d932..41b23d1 100644
--- a/sbndcode/LArSoftConfigurations/gen/set_flux_config_b.fcl
+++ b/sbndcode/LArSoftConfigurations/gen/set_flux_config_b.fcl
@@ -1,6 +1,6 @@
 # Include this file at the bottom of your GENIE fcl to use flux files produced with configuration B
 # Flux configurations are described here:
-# https://sbnsoftware.github.io/sbndcode_wiki/The_SBND_flux_files.html
+# https://sbnsoftware.github.io/sbndcode::wiki/The_SBND_flux_files.html
 
 physics.producers.generator: {
      @table::physics.producers.generator
diff --git a/sbndcode/LArSoftConfigurations/gen/set_flux_config_c.fcl b/sbndcode/LArSoftConfigurations/gen/set_flux_config_c.fcl
index ec9f396..c53246b 100644
--- a/sbndcode/LArSoftConfigurations/gen/set_flux_config_c.fcl
+++ b/sbndcode/LArSoftConfigurations/gen/set_flux_config_c.fcl
@@ -1,6 +1,6 @@
 # Include this file at the bottom of your GENIE fcl to use flux files produced with configuration C
 # Flux configurations are described here:
-# https://sbnsoftware.github.io/sbndcode_wiki/The_SBND_flux_files.html
+# https://sbnsoftware.github.io/sbndcode::wiki/The_SBND_flux_files.html
 
 physics.producers.generator: {
      @table::physics.producers.generator
diff --git a/sbndcode/LArSoftConfigurations/gen/set_flux_config_d.fcl b/sbndcode/LArSoftConfigurations/gen/set_flux_config_d.fcl
index f5fb95d..ebc184d 100644
--- a/sbndcode/LArSoftConfigurations/gen/set_flux_config_d.fcl
+++ b/sbndcode/LArSoftConfigurations/gen/set_flux_config_d.fcl
@@ -1,6 +1,6 @@
 # Include this file at the bottom of your GENIE fcl to use flux files produced with configuration D
 # Flux configurations are described here:
-# https://sbnsoftware.github.io/sbndcode_wiki/The_SBND_flux_files.html
+# https://sbnsoftware.github.io/sbndcode::wiki/The_SBND_flux_files.html
 
 physics.producers.generator: {
      @table::physics.producers.generator
diff --git a/sbndcode/LArSoftConfigurations/gen/set_flux_config_e.fcl b/sbndcode/LArSoftConfigurations/gen/set_flux_config_e.fcl
index 6285cd6..0ff57a8 100644
--- a/sbndcode/LArSoftConfigurations/gen/set_flux_config_e.fcl
+++ b/sbndcode/LArSoftConfigurations/gen/set_flux_config_e.fcl
@@ -1,6 +1,6 @@
 # Include this file at the bottom of your GENIE fcl to use flux files produced with configuration E
 # Flux configurations are described here:
-# https://sbnsoftware.github.io/sbndcode_wiki/The_SBND_flux_files.html
+# https://sbnsoftware.github.io/sbndcode::wiki/The_SBND_flux_files.html
 
 physics.producers.generator: {
      @table::physics.producers.generator
diff --git a/sbndcode/LArSoftConfigurations/gen/set_flux_config_f.fcl b/sbndcode/LArSoftConfigurations/gen/set_flux_config_f.fcl
index 66ba9f3..2d66e27 100644
--- a/sbndcode/LArSoftConfigurations/gen/set_flux_config_f.fcl
+++ b/sbndcode/LArSoftConfigurations/gen/set_flux_config_f.fcl
@@ -1,6 +1,6 @@
 # Include this file at the bottom of your GENIE fcl to use flux files produced with configuration F
 # Flux configurations are described here:
-# https://sbnsoftware.github.io/sbndcode_wiki/The_SBND_flux_files.html
+# https://sbnsoftware.github.io/sbndcode::wiki/The_SBND_flux_files.html
 
 physics.producers.generator: {
      @table::physics.producers.generator
diff --git a/sbndcode/LArSoftConfigurations/gen/set_flux_config_g.fcl b/sbndcode/LArSoftConfigurations/gen/set_flux_config_g.fcl
index e66c760..452da2a 100644
--- a/sbndcode/LArSoftConfigurations/gen/set_flux_config_g.fcl
+++ b/sbndcode/LArSoftConfigurations/gen/set_flux_config_g.fcl
@@ -1,6 +1,6 @@
 # Include this file at the bottom of your GENIE fcl to use flux files produced with configuration G
 # Flux configurations are described here:
-# https://sbnsoftware.github.io/sbndcode_wiki/The_SBND_flux_files.html
+# https://sbnsoftware.github.io/sbndcode::wiki/The_SBND_flux_files.html
 
 physics.producers.generator: {
      @table::physics.producers.generator
diff --git a/sbndcode/LArSoftConfigurations/gen/set_flux_config_h.fcl b/sbndcode/LArSoftConfigurations/gen/set_flux_config_h.fcl
index 2ceffae..5d6b27f 100644
--- a/sbndcode/LArSoftConfigurations/gen/set_flux_config_h.fcl
+++ b/sbndcode/LArSoftConfigurations/gen/set_flux_config_h.fcl
@@ -1,6 +1,6 @@
 # Include this file at the bottom of your GENIE fcl to use flux files produced with configuration H
 # Flux configurations are described here:
-# https://sbnsoftware.github.io/sbndcode_wiki/The_SBND_flux_files.html
+# https://sbnsoftware.github.io/sbndcode::wiki/The_SBND_flux_files.html
 
 physics.producers.generator: {
      @table::physics.producers.generator
diff --git a/sbndcode/MCTruthExtractor/CMakeLists.txt b/sbndcode/MCTruthExtractor/CMakeLists.txt
index 0d6bada..39b028f 100644
--- a/sbndcode/MCTruthExtractor/CMakeLists.txt
+++ b/sbndcode/MCTruthExtractor/CMakeLists.txt
@@ -1,35 +1,35 @@
 add_subdirectory(alg)
-include_directories ( $ENV{GENIE_INC}/GENIE )
+include_directories ( $ENV{GENIE}/include/GENIE ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
             LIBRARY_NAME Ntuples
             MODULE_LIBRARIES
-            sbndcode_MCTruthExtractor_alg
+            sbndcode::MCTruthExtractor_alg
 
-            larcore_Geometry_Geometry_service
+            larcore::Geometry_Geometry_service
             # TimeService_service
-            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
+            art_root_io::TFileService_service
             ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-            larcorealg_Geometry
-            larsim_Simulation nug4_ParticleNavigation lardataobj_Simulation
-            lardata_Utilities
-            larevt_Filters
-            lardataobj_RawData
-            nugen_NuReweight_art
-            nusimdata_SimulationBase
-            ${ART_FRAMEWORK_CORE}
-            ${ART_FRAMEWORK_PRINCIPAL}
-            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-            ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-            art_Persistency_Common
-            art_Persistency_Provenance
-            art_Utilities
-            canvas
+            larcorealg::Geometry
+            larsim::Simulation nug4_ParticleNavigation lardataobj::Simulation
+            lardata::Utilities
+            larevt::Filters
+            lardataobj::RawData
+            nugen::NuReweight_art
+            nusimdata::SimulationBase
+            art::Framework_Core
+            art::Framework_Principal
+            art::Framework_Services_Registry
+            art_root_io::tfile_support ${ROOT_CORE}
+            art::Persistency_Common
+            art::Persistency_Provenance
+            art::Utilities
+            canvas::canvas
             ${MF_MESSAGELOGGER}
 
             ${FHICLCPP}
-            cetlib cetlib_except
-            ${CLHEP}
+            cetlib::cetlib cetlib_except::cetlib_except
+            CLHEP::CLHEP
             ${ROOT_BASIC_LIB_LIST}
           )
 
diff --git a/sbndcode/MCTruthExtractor/alg/CMakeLists.txt b/sbndcode/MCTruthExtractor/alg/CMakeLists.txt
index bd1e439..9f346cb 100644
--- a/sbndcode/MCTruthExtractor/alg/CMakeLists.txt
+++ b/sbndcode/MCTruthExtractor/alg/CMakeLists.txt
@@ -1,25 +1,25 @@
-include_directories ( $ENV{GENIE_INC}/GENIE )
+include_directories ( $ENV{GENIE}/include/GENIE ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
             LIB_LIBRARIES
-            larcore_Geometry_Geometry_service
-            larcorealg_Geometry
-            nugen_NuReweight_art
-            nugen_NuReweight
-            nusimdata_SimulationBase
-            ${ART_FRAMEWORK_CORE}
-            ${ART_FRAMEWORK_PRINCIPAL}
-            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-            ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-            art_Persistency_Common
-            art_Persistency_Provenance
-            art_Utilities
-            canvas
+            larcore::Geometry_Geometry_service
+            larcorealg::Geometry
+            nugen::NuReweight_art
+            nugen::NuReweight
+            nusimdata::SimulationBase
+            art::Framework_Core
+            art::Framework_Principal
+            art::Framework_Services_Registry
+            art_root_io::tfile_support ${ROOT_CORE}
+            art::Persistency_Common
+            art::Persistency_Provenance
+            art::Utilities
+            canvas::canvas
             ${MF_MESSAGELOGGER}
 
             ${FHICLCPP}
-            cetlib cetlib_except
-            ${CLHEP}
+            cetlib::cetlib cetlib_except::cetlib_except
+            CLHEP::CLHEP
             ${Boost_SYSTEM_LIBRARY}
             ${ROOT_BASIC_LIB_LIST}
           )
diff --git a/sbndcode/OpDetReco/OpDeconvolution/Alg/CMakeLists.txt b/sbndcode/OpDetReco/OpDeconvolution/Alg/CMakeLists.txt
old mode 100755
new mode 100644
index a5cb735..9c1d9bb
--- a/sbndcode/OpDetReco/OpDeconvolution/Alg/CMakeLists.txt
+++ b/sbndcode/OpDetReco/OpDeconvolution/Alg/CMakeLists.txt
@@ -1,26 +1,26 @@
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
    TOOL_LIBRARIES
-         art_Utilities
-         larcore_Geometry_Geometry_service
-         lardataobj_RawData
-         lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-         sbndcode_Utilities_SignalShapingServiceSBND_service
+         art::Utilities
+         larcore::Geometry_Geometry_service
+         lardataobj::RawData
+         lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+         sbndcode::Utilities_SignalShapingServiceSBND_service
          ${MF_MESSAGELOGGER}
          ${FHICLCPP}
          ${CETLIB}
          ${CLHEP}
          ${ROOT_BASIC_LIB_LIST}
-         ${ART_FRAMEWORK_CORE}
-         ${ART_FRAMEWORK_PRINCIPAL}
+         art::Framework_Core
+         art::Framework_Principal
          ${ART_FRAMEWORK_BASIC}
-         ${ART_FRAMEWORK_SERVICES_REGISTRY}
+         art::Framework_Services_Registry
          ${ART_FRAMEWORK_SERVICES_OPTIONAL}
          ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
          ${ART_PERSISTENCY_COMMON}
          ${ART_PERSISTENCY_PROVENANCE}
          ${ART_UTILITIES}
-         cetlib
-         cetlib_except
+         cetlib::cetlib
+         cetlib_except::cetlib_except
          ${MF_UTILITIES}
 
 )
diff --git a/sbndcode/OpDetReco/OpDeconvolution/CMakeLists.txt b/sbndcode/OpDetReco/OpDeconvolution/CMakeLists.txt
old mode 100755
new mode 100644
index 76cc28d..713e9db
--- a/sbndcode/OpDetReco/OpDeconvolution/CMakeLists.txt
+++ b/sbndcode/OpDetReco/OpDeconvolution/CMakeLists.txt
@@ -1,37 +1,37 @@
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
    LIB_LIBRARIES
-         larcore_Geometry_Geometry_service
-         lardataobj_RawData
-         lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-         sbndcode_Utilities_SignalShapingServiceSBND_service
-         nurandom_RandomUtils_NuRandomService_service
+         larcore::Geometry_Geometry_service
+         lardataobj::RawData
+         lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+         sbndcode::Utilities_SignalShapingServiceSBND_service
+         nurandom::RandomUtils_NuRandomService_service
          ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-         cetlib_except
+         cetlib::cetlibexcept
          ${MF_MESSAGELOGGER}
          ${MF_UTILITIES}
          ${FHICLCPP}
-         cetlib cetlib_except
+         cetlib::cetlib cetlib_except::cetlib_except
          ${CLHEP}
          ${ROOT_BASIC_LIB_LIST}
          ${ROOT_CORE}
 
    MODULE_LIBRARIES
-         sbndcode_OpDetSim
-         larcore_Geometry_Geometry_service
-         lardataobj_Simulation
-         lardata_Utilities
-         lardataobj_RawData
-         sbndcode_Utilities_SignalShapingServiceSBND_service
-         nurandom_RandomUtils_NuRandomService_service
-         ${ART_FRAMEWORK_CORE}
-         ${ART_FRAMEWORK_PRINCIPAL}
+         sbndcode::OpDetSim
+         larcore::Geometry_Geometry_service
+         lardataobj::Simulation
+         lardata::Utilities
+         lardataobj::RawData
+         sbndcode::Utilities_SignalShapingServiceSBND_service
+         nurandom::RandomUtils_NuRandomService_service
+         art::Framework_Core
+         art::Framework_Principal
          ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
          ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-         canvas
+         canvas::canvas
          ${MF_MESSAGELOGGER}
          ${MF_UTILITIES}
          ${FHICLCPP}
-         cetlib cetlib_except
+         cetlib::cetlib cetlib_except::cetlib_except
          ${CLHEP}
          ${ROOT_BASIC_LIB_LIST}
 )
diff --git a/sbndcode/OpDetReco/OpFlash/CMakeLists.txt b/sbndcode/OpDetReco/OpFlash/CMakeLists.txt
index c6d524b..e9f74ce 100644
--- a/sbndcode/OpDetReco/OpFlash/CMakeLists.txt
+++ b/sbndcode/OpDetReco/OpFlash/CMakeLists.txt
@@ -1,30 +1,30 @@
-include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
-art_make(
+include_directories( ${CMAKE_CURRENT_SOURCE_DIR} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
     LIB_LIBRARIES
-        sbndcode_Geometry
-        sbndcode_OpDetSim
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        lardata_Utilities
-        lardataobj_RecoBase
-        larsim_Simulation
-        lardataobj_Simulation
-        nusimdata_SimulationBase
+        sbndcode::Geometry
+        sbndcode::OpDetSim
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        lardata::Utilities
+        lardataobj::RecoBase
+        larsim::Simulation
+        lardataobj::Simulation
+        nusimdata::SimulationBase
         ${LARDATA_LIB}
-        canvas
-        cetlib
-        cetlib_except
+        canvas::canvas
+        cetlib::cetlib
+        cetlib_except::cetlib_except
         ${ART_FRAMEWORK_ART}
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Core
+        art::Framework_Principal
         ${ART_FRAMEWORK_UTILITIES}
         ${ART_FRAMEWORK_BASIC}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-        art_Persistency_Common
-        art_Persistency_Provenance
-        art_Utilities
+        art::Framework_Services_Registry
+        art_root_io::tfile_support ${ROOT_CORE}
+        art_root_io::TFileService_service
+        art::Persistency_Common
+        art::Persistency_Provenance
+        art::Utilities
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
@@ -33,30 +33,30 @@ art_make(
         ${ROOT_GDML}
         ${ROOT_BASIC_LIB_LIST}
     MODULE_LIBRARIES
-        sbndcode_OpDetReco_OpFlash_FlashFinder
-        sbndcode_OpDetSim
-        sbndcode_Geometry
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        lardata_Utilities
-        lardataobj_RecoBase
-        larsim_Simulation
-        lardataobj_Simulation
-        nusimdata_SimulationBase
+        sbndcode::OpDetReco_OpFlash_FlashFinder
+        sbndcode::OpDetSim
+        sbndcode::Geometry
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        lardata::Utilities
+        lardataobj::RecoBase
+        larsim::Simulation
+        lardataobj::Simulation
+        nusimdata::SimulationBase
         ${LARDATA_LIB}
-        canvas
-        cetlib
-        cetlib_except
+        canvas::canvas
+        cetlib::cetlib
+        cetlib_except::cetlib_except
         ${ART_FRAMEWORK_ART}
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Core
+        art::Framework_Principal
         ${ART_FRAMEWORK_BASIC}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-        art_Persistency_Common
-        art_Persistency_Provenance
-        art_Utilities
+        art::Framework_Services_Registry
+        art_root_io::tfile_support ${ROOT_CORE}
+        art_root_io::TFileService_service
+        art::Persistency_Common
+        art::Persistency_Provenance
+        art::Utilities
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
diff --git a/sbndcode/OpDetReco/OpFlash/FlashFinder/CMakeLists.txt b/sbndcode/OpDetReco/OpFlash/FlashFinder/CMakeLists.txt
index 3f76e7b..3fc42c6 100644
--- a/sbndcode/OpDetReco/OpFlash/FlashFinder/CMakeLists.txt
+++ b/sbndcode/OpDetReco/OpFlash/FlashFinder/CMakeLists.txt
@@ -1,30 +1,30 @@
-include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
-art_make(
+include_directories( ${CMAKE_CURRENT_SOURCE_DIR} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
     BASENAME_ONLY
-    LIBRARY_NAME   sbndcode_OpDetReco_OpFlash_FlashFinder
+    LIBRARY_NAME   sbndcode::OpDetReco_OpFlash_FlashFinder
 	LIB_LIBRARIES
-        sbndcode_Geometry
-        sbndcode_OpDetSim
-        larcore_Geometry_Geometry_service
-        lardataobj_RecoBase
-        larsim_Simulation
-        lardataobj_Simulation
-        nusimdata_SimulationBase
+        sbndcode::Geometry
+        sbndcode::OpDetSim
+        larcore::Geometry_Geometry_service
+        lardataobj::RecoBase
+        larsim::Simulation
+        lardataobj::Simulation
+        nusimdata::SimulationBase
         ${LARDATA_LIB}
-        canvas
-        cetlib
-        cetlib_except
+        canvas::canvas
+        cetlib::cetlib
+        cetlib_except::cetlib_except
         ${ART_FRAMEWORK_ART}
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Core
+        art::Framework_Principal
         ${ART_FRAMEWORK_UTILITIES}
         ${ART_FRAMEWORK_BASIC}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-        art_Persistency_Common
-        art_Persistency_Provenance
-        art_Utilities
+        art::Framework_Services_Registry
+        art_root_io::tfile_support ${ROOT_CORE}
+        art_root_io::TFileService_service
+        art::Persistency_Common
+        art::Persistency_Provenance
+        art::Utilities
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
@@ -33,27 +33,27 @@ art_make(
         ${ROOT_GDML}
         ${ROOT_BASIC_LIB_LIST}
     MODULE_LIBRARIES
-        sbndcode_OpDetSim
-        sbndcode_Geometry
-        larcore_Geometry_Geometry_service
-        lardataobj_RecoBase
-        larsim_Simulation
-        lardataobj_Simulation
-        nusimdata_SimulationBase
+        sbndcode::OpDetSim
+        sbndcode::Geometry
+        larcore::Geometry_Geometry_service
+        lardataobj::RecoBase
+        larsim::Simulation
+        lardataobj::Simulation
+        nusimdata::SimulationBase
         ${LARDATA_LIB}
-        canvas
-        cetlib
-        cetlib_except
+        canvas::canvas
+        cetlib::cetlib
+        cetlib_except::cetlib_except
         ${ART_FRAMEWORK_ART}
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Core
+        art::Framework_Principal
         ${ART_FRAMEWORK_BASIC}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-        art_Persistency_Common
-        art_Persistency_Provenance
-        art_Utilities
+        art::Framework_Services_Registry
+        art_root_io::tfile_support ${ROOT_CORE}
+        art_root_io::TFileService_service
+        art::Persistency_Common
+        art::Persistency_Provenance
+        art::Utilities
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
diff --git a/sbndcode/OpDetReco/OpHit/CMakeLists.txt b/sbndcode/OpDetReco/OpHit/CMakeLists.txt
old mode 100755
new mode 100644
index f046f01..f28c9a9
--- a/sbndcode/OpDetReco/OpHit/CMakeLists.txt
+++ b/sbndcode/OpDetReco/OpHit/CMakeLists.txt
@@ -1,49 +1,49 @@
 cet_enable_asserts()
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
    LIB_LIBRARIES
          larana_OpticalDetector_OpHitFinder
-         larcore_Geometry_Geometry_service
-         lardataobj_Simulation
-         lardata_Utilities
-         lardataobj_RawData
-         lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-         larpandora_LArPandoraInterface
-         sbndcode_Utilities_SignalShapingServiceSBND_service
-         nurandom_RandomUtils_NuRandomService_service
+         larcore::Geometry_Geometry_service
+         lardataobj::Simulation
+         lardata::Utilities
+         lardataobj::RawData
+         lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+         larpandora::LArPandoraInterface
+         sbndcode::Utilities_SignalShapingServiceSBND_service
+         nurandom::RandomUtils_NuRandomService_service
          ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-         canvas
-         cetlib_except
+         canvas::canvas
+         cetlib_except::cetlib_except
          ${MF_MESSAGELOGGER}
          ${MF_UTILITIES}
          ${FHICLCPP}
-         cetlib cetlib_except
+         cetlib::cetlib cetlib_except::cetlib_except
          ${CLHEP}
          ${ROOT_BASIC_LIB_LIST}
          ${ROOT_CORE}
 
    MODULE_LIBRARIES
-         sbndcode_OpDetSim
+         sbndcode::OpDetSim
          pthread
          larana_OpticalDetector_OpHitFinder
-         larcore_Geometry_Geometry_service
-         lardataobj_Simulation
-         lardata_Utilities
-         lardataobj_RawData
-         lardataobj_RecoBase
-         lardataobj_AnalysisBase
-         lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-         sbndcode_Utilities_SignalShapingServiceSBND_service
-         nurandom_RandomUtils_NuRandomService_service
-         ${ART_FRAMEWORK_CORE}
-         ${ART_FRAMEWORK_PRINCIPAL}
+         larcore::Geometry_Geometry_service
+         lardataobj::Simulation
+         lardata::Utilities
+         lardataobj::RawData
+         lardataobj::RecoBase
+         lardataobj::AnalysisBase
+         lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+         sbndcode::Utilities_SignalShapingServiceSBND_service
+         nurandom::RandomUtils_NuRandomService_service
+         art::Framework_Core
+         art::Framework_Principal
          ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
          ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-         canvas
+         canvas::canvas
          ${MF_MESSAGELOGGER}
          ${MF_UTILITIES}
          ${FHICLCPP}
-         cetlib cetlib_except
+         cetlib::cetlib cetlib_except::cetlib_except
          ${CLHEP}
          ${ROOT_BASIC_LIB_LIST}
 )
diff --git a/sbndcode/OpDetSim/CMakeLists.txt b/sbndcode/OpDetSim/CMakeLists.txt
old mode 100755
new mode 100644
index 88e65a7..ffe0b0d
--- a/sbndcode/OpDetSim/CMakeLists.txt
+++ b/sbndcode/OpDetSim/CMakeLists.txt
@@ -1,71 +1,71 @@
 
 simple_plugin( sbndPDMapAlg tool
-                    larcore_Geometry_Geometry_service
-                    lardataobj_Simulation
-                    lardata_Utilities
-                    lardataobj_RawData
-                    # lardataobj_RecoBase
-                    lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-                    larpandora_LArPandoraInterface
-                    sbndcode_Utilities_SignalShapingServiceSBND_service
-                    nurandom_RandomUtils_NuRandomService_service
+                    larcore::Geometry_Geometry_service
+                    lardataobj::Simulation
+                    lardata::Utilities
+                    lardataobj::RawData
+                    # lardataobj::RecoBase
+                    lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+                    larpandora::LArPandoraInterface
+                    sbndcode::Utilities_SignalShapingServiceSBND_service
+                    nurandom::RandomUtils_NuRandomService_service
                     ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                    canvas
-                    cetlib_except
+                    canvas::canvas
+                    cetlib_except::cetlib_except
                     ${MF_MESSAGELOGGER}
                     ${MF_UTILITIES}
                     ${FHICLCPP}
-                    cetlib cetlib_except
+                    cetlib::cetlib cetlib_except::cetlib_except
                     ${CLHEP}
                     ${ROOT_BASIC_LIB_LIST}
                     ${ROOT_CORE}
 )
 
 
-art_make( EXCLUDE sbndPDMapAlg_tool.cc
+art_make( EXCLUDE sbndPDMapAlg_tool.cc ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
   LIB_LIBRARIES
-                    sbndcode_OpDetSim_sbndPDMapAlg_tool
-                    larcore_Geometry_Geometry_service
-                    lardataobj_Simulation
-                    lardata_Utilities
-                    lardataobj_RawData
-                    # lardataobj_RecoBase
-                    lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-                    larpandora_LArPandoraInterface
-                    sbndcode_Utilities_SignalShapingServiceSBND_service
-                    nurandom_RandomUtils_NuRandomService_service
+                    sbndcode::OpDetSim_sbndPDMapAlg_tool
+                    larcore::Geometry_Geometry_service
+                    lardataobj::Simulation
+                    lardata::Utilities
+                    lardataobj::RawData
+                    # lardataobj::RecoBase
+                    lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+                    larpandora::LArPandoraInterface
+                    sbndcode::Utilities_SignalShapingServiceSBND_service
+                    nurandom::RandomUtils_NuRandomService_service
                     ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                    canvas
-                    cetlib_except
+                    canvas::canvas
+                    cetlib_except::cetlib_except
                     ${MF_MESSAGELOGGER}
                     ${MF_UTILITIES}
                     ${FHICLCPP}
-                    cetlib cetlib_except
+                    cetlib::cetlib cetlib_except::cetlib_except
                     ${CLHEP}
                     ${ROOT_BASIC_LIB_LIST}
                     ${ROOT_CORE}
 
   MODULE_LIBRARIES
-                    sbndcode_OpDetSim
+                    sbndcode::OpDetSim
                     pthread
-                    larcore_Geometry_Geometry_service
-                    lardataobj_Simulation
-                    lardata_Utilities
-                    lardataobj_RawData
-                    lardataobj_RecoBase
-                    lardataobj_AnalysisBase
-                    lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-                    sbndcode_Utilities_SignalShapingServiceSBND_service
-                    nurandom_RandomUtils_NuRandomService_service
-                    ${ART_FRAMEWORK_CORE}
-                    ${ART_FRAMEWORK_PRINCIPAL}
+                    larcore::Geometry_Geometry_service
+                    lardataobj::Simulation
+                    lardata::Utilities
+                    lardataobj::RawData
+                    lardataobj::RecoBase
+                    lardataobj::AnalysisBase
+                    lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+                    sbndcode::Utilities_SignalShapingServiceSBND_service
+                    nurandom::RandomUtils_NuRandomService_service
+                    art::Framework_Core
+                    art::Framework_Principal
                     ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
                     ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                    canvas
+                    canvas::canvas
                     ${MF_MESSAGELOGGER}
                     ${MF_UTILITIES}
                     ${FHICLCPP}
-                    cetlib cetlib_except
+                    cetlib::cetlib cetlib_except::cetlib_except
                     ${CLHEP}
                     ${ROOT_BASIC_LIB_LIST}
 )
diff --git a/sbndcode/OpDetSim/FlashFinder/CMakeLists.txt b/sbndcode/OpDetSim/FlashFinder/CMakeLists.txt
index d99b91b..3b116a8 100644
--- a/sbndcode/OpDetSim/FlashFinder/CMakeLists.txt
+++ b/sbndcode/OpDetSim/FlashFinder/CMakeLists.txt
@@ -1,24 +1,24 @@
-include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
-art_make( 
+include_directories( ${CMAKE_CURRENT_SOURCE_DIR} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+art_make(  ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
 	  LIB_LIBRARIES
-		   sbndcode_Geometry
-		   larcore_Geometry_Geometry_service
-		   lardataobj_RecoBase
+		   sbndcode::Geometry
+		   larcore::Geometry_Geometry_service
+		   lardataobj::RecoBase
 		   ${LARDATA_LIB}
-		   canvas
-		   cetlib
-		   cetlib_except
+		   canvas::canvas
+		   cetlib::cetlib
+		   cetlib_except::cetlib_except
 		   ${ART_FRAMEWORK_ART}
-		   ${ART_FRAMEWORK_CORE}
-		   ${ART_FRAMEWORK_PRINCIPAL}
+		   art::Framework_Core
+		   art::Framework_Principal
 		   ${ART_FRAMEWORK_UTILITIES}
                    ${ART_FRAMEWORK_BASIC}
-		   ${ART_FRAMEWORK_SERVICES_REGISTRY}
-		   ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-		   ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-		   art_Persistency_Common
-		   art_Persistency_Provenance
-		   art_Utilities
+		   art::Framework_Services_Registry
+		   art_root_io::tfile_support ${ROOT_CORE}
+		   art_root_io::TFileService_service
+		   art::Persistency_Common
+		   art::Persistency_Provenance
+		   art::Utilities
 		   ${MF_MESSAGELOGGER}
 		   ${MF_UTILITIES}
 		   ${FHICLCPP}
@@ -27,24 +27,24 @@ art_make(
 		   ${ROOT_GDML}
 		   ${ROOT_BASIC_LIB_LIST}
           MODULE_LIBRARIES
-		   sbndcode_OpDetSim_FlashFinder
-		   sbndcode_Geometry
-		   larcore_Geometry_Geometry_service
-		   lardataobj_RecoBase
+		   sbndcode::OpDetSim_FlashFinder
+		   sbndcode::Geometry
+		   larcore::Geometry_Geometry_service
+		   lardataobj::RecoBase
 		   ${LARDATA_LIB}
-		   canvas
-		   cetlib
-		   cetlib_except
+		   canvas::canvas
+		   cetlib::cetlib
+		   cetlib_except::cetlib_except
 		   ${ART_FRAMEWORK_ART}
-		   ${ART_FRAMEWORK_CORE}
-		   ${ART_FRAMEWORK_PRINCIPAL}
+		   art::Framework_Core
+		   art::Framework_Principal
                    ${ART_FRAMEWORK_BASIC}
-		   ${ART_FRAMEWORK_SERVICES_REGISTRY}
-		   ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-		   ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-		   art_Persistency_Common
-		   art_Persistency_Provenance
-		   art_Utilities
+		   art::Framework_Services_Registry
+		   art_root_io::tfile_support ${ROOT_CORE}
+		   art_root_io::TFileService_service
+		   art::Persistency_Common
+		   art::Persistency_Provenance
+		   art::Utilities
 		   ${MF_MESSAGELOGGER}
 		   ${MF_UTILITIES}
 		   ${FHICLCPP}
diff --git a/sbndcode/OpDetSim/PMTAlg/CMakeLists.txt b/sbndcode/OpDetSim/PMTAlg/CMakeLists.txt
old mode 100755
new mode 100644
index 9df098d..9ffb59f
--- a/sbndcode/OpDetSim/PMTAlg/CMakeLists.txt
+++ b/sbndcode/OpDetSim/PMTAlg/CMakeLists.txt
@@ -1,12 +1,12 @@
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
    TOOL_LIBRARIES
-         art_Utilities
+         art::Utilities
          ${MF_MESSAGELOGGER}
          ${FHICLCPP}
          ${CETLIB}
          CLHEP::CLHEP
-         cetlib
-         cetlib_except
+         cetlib::cetlib
+         cetlib_except::cetlib_except
          ${MF_UTILITIES}
 )
 
diff --git a/sbndcode/OpT0Finder/CMakeLists.txt b/sbndcode/OpT0Finder/CMakeLists.txt
index cfa3144..c06ab57 100644
--- a/sbndcode/OpT0Finder/CMakeLists.txt
+++ b/sbndcode/OpT0Finder/CMakeLists.txt
@@ -1,4 +1,4 @@
-# include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
+# include_directories( ${CMAKE_CURRENT_SOURCE_DIR} ) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
 # Turning off WERROR only for this package, because it needs to
 # call OpFlastScintillation which has an unused variable.
@@ -10,38 +10,38 @@
 #   NO_UNDEFINED
 #   EXTRA_FLAGS -pedantic -Wno-unused-local-typedefs
 # )
-include_directories($ENV{GEANT4_FQ_DIR}/include)
+include_directories($ENV{GEANT4_FQ_DIR}/include) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
     LIB_LIBRARIES
         sbncode_OpT0Finder_flashmatch_Base
         sbncode_OpT0Finder_flashmatch_Algorithms
         sbnbcode_Geometry
         sbnbcode_OpDetSim
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        lardata_Utilities
-        lardataobj_RecoBase
-        larsim_Simulation
-        # larsim_LegacyLArG4
-        lardataobj_AnalysisBase
-        lardataobj_Simulation
-        nusimdata_SimulationBase
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        lardata::Utilities
+        lardataobj::RecoBase
+        larsim::Simulation
+        # larsim::LegacyLArG4
+        lardataobj::AnalysisBase
+        lardataobj::Simulation
+        nusimdata::SimulationBase
         ${LARDATA_LIB}
-        canvas
-        cetlib
-        cetlib_except
+        canvas::canvas
+        cetlib::cetlib
+        cetlib_except::cetlib_except
         ${ART_FRAMEWORK_ART}
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Core
+        art::Framework_Principal
         ${ART_FRAMEWORK_UTILITIES}
         ${ART_FRAMEWORK_BASIC}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-        art_Persistency_Common
-        art_Persistency_Provenance
-        art_Utilities
+        art::Framework_Services_Registry
+        art_root_io::tfile_support ${ROOT_CORE}
+        art_root_io::TFileService_service
+        art::Persistency_Common
+        art::Persistency_Provenance
+        art::Utilities
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
@@ -52,33 +52,33 @@ art_make(
     MODULE_LIBRARIES
         sbncode_OpT0Finder_flashmatch_Base
         sbncode_OpT0Finder_flashmatch_Algorithms
-        # sbndcode_OpDetReco_OpFlash_FlashFinder
-        sbndcode_OpDetSim
-        sbndcode_Geometry
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        lardata_Utilities
-        lardataobj_AnalysisBase
-        lardataobj_RecoBase
-        larsim_Simulation
-        # larsim_LegacyLArG4
-        lardataobj_Simulation
-        larpandora_LArPandoraInterface
-        nusimdata_SimulationBase
+        # sbndcode::OpDetReco_OpFlash_FlashFinder
+        sbndcode::OpDetSim
+        sbndcode::Geometry
+        larcorealg::Geometry
+        larcore::Geometry_Geometry_service
+        lardata::Utilities
+        lardataobj::AnalysisBase
+        lardataobj::RecoBase
+        larsim::Simulation
+        # larsim::LegacyLArG4
+        lardataobj::Simulation
+        larpandora::LArPandoraInterface
+        nusimdata::SimulationBase
         ${LARDATA_LIB}
-        canvas
-        cetlib
-        cetlib_except
+        canvas::canvas
+        cetlib::cetlib
+        cetlib_except::cetlib_except
         ${ART_FRAMEWORK_ART}
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_PRINCIPAL}
+        art::Framework_Core
+        art::Framework_Principal
         ${ART_FRAMEWORK_BASIC}
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-        art_Persistency_Common
-        art_Persistency_Provenance
-        art_Utilities
+        art::Framework_Services_Registry
+        art_root_io::tfile_support ${ROOT_CORE}
+        art_root_io::TFileService_service
+        art::Persistency_Common
+        art::Persistency_Provenance
+        art::Utilities
         ${MF_MESSAGELOGGER}
         ${MF_UTILITIES}
         ${FHICLCPP}
diff --git a/sbndcode/RecoUtils/CMakeLists.txt b/sbndcode/RecoUtils/CMakeLists.txt
index 0e98010..fcb5094 100644
--- a/sbndcode/RecoUtils/CMakeLists.txt
+++ b/sbndcode/RecoUtils/CMakeLists.txt
@@ -1,25 +1,25 @@
-art_make(
-             LIB_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardata_RecoObjects  
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           cetlib cetlib_except
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+             LIB_LIBRARIES larcorealg::Geometry
+                           larcore::Geometry_Geometry_service
+                           larsim::Simulation lardataobj::Simulation
+                           larsim::MCCheater_BackTrackerService_service
+                           larsim::MCCheater_ParticleInventoryService_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardata::RecoObjects  
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           cetlib::cetlib cetlib_except::cetlib_except
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ROOT::Core
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance
+                           art::Utilities
                            ${MF_MESSAGELOGGER}
                            
                            ${FHICLCPP}
@@ -27,7 +27,7 @@ art_make(
                            ${ROOT_XMLIO}
                            ${ROOT_GDML}
                            ${ROOT_BASIC_LIB_LIST}
-                           ${Boost_SYSTEM_LIBRARY}
+                           Boost::system
         )
 
 install_headers()
@@ -35,39 +35,39 @@ install_fhicl()
 install_source()
 
 
-#art_make( LIBRARY_NAME RecoUtils
-#	  LIB_LIBRARIES larcorealg_Geometry
-#	  	        larcore_Geometry_Geometry_service
-#		        larsim_Simulation nug4_ParticleNavigation lardataobj_Simulation
-# 	  	        larsim_MCCheater_BackTrackerService_service
-#	  	        lardata_Utilities
-#larevt_Filters
-#	  	        lardataobj_RawData
-#	  	        lardataobj_RecoBase
-#	  	        lardata_RecoObjects
-#larreco_RecoAlg
-#larreco_Calorimetry
-#larpandora_LArPandoraInterface
-#          	        nusimdata_SimulationBase
+#art_make( LIBRARY_NAME RecoUtils ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
+#	  LIB_LIBRARIES larcorealg::Geometry
+#	  	        larcore::Geometry_Geometry_service
+#		        larsim::Simulation nug4_ParticleNavigation lardataobj::Simulation
+# 	  	        larsim::MCCheater_BackTrackerService_service
+#	  	        lardata::Utilities
+#larevt::Filters
+#	  	        lardataobj::RawData
+#	  	        lardataobj::RecoBase
+#	  	        lardata::RecoObjects
+#larreco::RecoAlg
+#larreco::Calorimetry
+#larpandora::LArPandoraInterface
+#          	        nusimdata::SimulationBase
 #          	        ${LARRECO_LIB}
 #          	        ${LARDATA_LIB}
 #	  	        ${MF_MESSAGELOGGER}
 #	  	        
 #	  	        ${FHICLCPP}
-#	  	        cetlib cetlib_except
+#	  	        cetlib cetlib::cetlibexcept
 #          	        ${ROOT_GEOM}
 #          	        ${ROOT_XMLIO}
 #          	        ${ROOT_GDML}
 #	  	        ${ROOT_BASIC_LIB_LIST}
 #	  MODULE_LIBRARIES RecoUtils
-#          	           ${ART_FRAMEWORK_CORE}
-#	  	           ${ART_FRAMEWORK_PRINCIPAL}
-#		       	   ${ART_FRAMEWORK_SERVICES_REGISTRY}
-#	  	       	   ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-#			   ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-#	  	           art_Persistency_Common canvas
-#	  	           art_Persistency_Provenance canvas
-#	  	           art_Utilities canvas
+#          	           art::framework_CORE}
+#	  	           art::framework_PRINCIPAL}
+#		       	   art::framework_SERVICES_REGISTRY}
+#	  	       	   art_root_io::TFILE_SUPPORT} ${ROOT_CORE}
+#			   art_root_io::TFILESERVICE_SERVICE}
+#	  	           art::Persistency_Common canvas::canvas
+#	  	           art::Persistency_Provenance canvas::canvas
+#	  	           art::Utilities canvas::canvas
 #        )
 #
 #install_headers()
diff --git a/sbndcode/ShowerAna/CMakeLists.txt b/sbndcode/ShowerAna/CMakeLists.txt
index 442e966..7f0ee4f 100644
--- a/sbndcode/ShowerAna/CMakeLists.txt
+++ b/sbndcode/ShowerAna/CMakeLists.txt
@@ -1,30 +1,30 @@
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
   MODULE_LIBRARIES
-  larcorealg_Geometry
-  larcore_Geometry_Geometry_service
-  larsim_Simulation
-  lardataobj_Simulation
-  larsim_MCCheater_BackTrackerService_service
-  lardata_Utilities
-  larevt_Filters
-  lardataobj_RawData
-  lardataobj_RecoBase
-  lardataobj_AnalysisBase
-  lardataobj_MCBase
-  larreco_RecoAlg
-  lardata_RecoObjects
-  larpandora_LArPandoraInterface
-  nusimdata_SimulationBase
+  larcorealg::Geometry
+  larcore::Geometry_Geometry_service
+  larsim::Simulation
+  lardataobj::Simulation
+  larsim::MCCheater_BackTrackerService_service
+  lardata::Utilities
+  larevt::Filters
+  lardataobj::RawData
+  lardataobj::RecoBase
+  lardataobj::AnalysisBase
+  lardataobj::MCBase
+  larreco::RecoAlg
+  lardata::RecoObjects
+  larpandora::LArPandoraInterface
+  nusimdata::SimulationBase
 
-  ${ART_FRAMEWORK_CORE}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
+  art::Framework_Core
+  art::Framework_Principal
+  art::Framework_Services_Registry
   ${ART_FRAMEWORK_SERVICES_OPTIONAL}
   ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
 
-  art_Persistency_Common
-  canvas art_Persistency_Provenance
-  canvas art_Utilities canvas
+  art::Persistency_Common
+  canvas::canvas art::Persistency_Provenance
+  canvas::canvas art::Utilities canvas
   ${MF_MESSAGELOGGER}
 
   ${FHICLCPP}
@@ -33,7 +33,7 @@ art_make(
   ${ROOT_GDML}
   ${ROOT_BASIC_LIB_LIST}
 
-  sbndcode_RecoUtils
+  sbndcode::RecoUtils
 )
 
 #install_headers()
diff --git a/sbndcode/SimulationFilters/CMakeLists.txt b/sbndcode/SimulationFilters/CMakeLists.txt
index 84edc2c..5b21c36 100644
--- a/sbndcode/SimulationFilters/CMakeLists.txt
+++ b/sbndcode/SimulationFilters/CMakeLists.txt
@@ -1,18 +1,18 @@
-art_make(
+art_make( ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
           MODULE_LIBRARIES
-            larcore_Geometry_Geometry_service
-            larcorealg_Geometry
-            lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-            lardataalg_DetectorInfo
-            nusimdata_SimulationBase
-            sbndcode_RecoUtils
-            ${ART_FRAMEWORK_CORE}
-            ${ART_FRAMEWORK_PRINCIPAL}
-            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-            ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-            art_Persistency_Common canvas
-            art_Persistency_Provenance canvas
-            art_Utilities canvas
+            larcore::Geometry_Geometry_service
+            larcorealg::Geometry
+            lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+            lardataalg::DetectorInfo
+            nusimdata::SimulationBase
+            sbndcode::RecoUtils
+            art::Framework_Core
+            art::Framework_Principal
+            art::Framework_Services_Registry
+            art_root_io::tfile_support ${ROOT_CORE}
+            art::Persistency_Common canvas::canvas
+            art::Persistency_Provenance canvas::canvas
+            art::Utilities canvas::canvas
             ${MF_MESSAGELOGGER}
             
             ${FHICLCPP}
@@ -23,19 +23,19 @@ art_make(
             ${ROOT_GEOM}
 
 #          MODULE_LIBRARIES larcore_Geometry
-#                           larcore_Geometry_Geometry_service
-#                           larsim_Simulation
-#                           lardata_Utilities
-#                           larevt_Filters
-#                           lardataobj_RawData
+#                           larcore::Geometry_Geometry_service
+#                           larsim::Simulation
+#                           lardata::Utilities
+#                           larevt::Filters
+#                           lardataobj::RawData
 #                           ${SIMULATIONBASE}
 #                           ${LARRECO_LIB}
 #                           ${LARDATA_LIB}
-#                           ${ART_FRAMEWORK_CORE}
-#                           ${ART_FRAMEWORK_PRINCIPAL}
-#                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-#                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-#                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
+#                           art::Framework_Core
+#                           art::Framework_Principal
+#                           art::Framework_Services_Registry
+#                           art_root_io::tfile_support ${ROOT_CORE}
+#                           art_root_io::TFileService_service
 #                           ${ART_PERSISTENCY_COMMON}
 #                           ${ART_PERSISTENCY_PROVENANCE}
 #                           ${ART_UTILITIES}
diff --git a/sbndcode/SpaceCharge/CMakeLists.txt b/sbndcode/SpaceCharge/CMakeLists.txt
index 5eb24c1..7b4eb1f 100644
--- a/sbndcode/SpaceCharge/CMakeLists.txt
+++ b/sbndcode/SpaceCharge/CMakeLists.txt
@@ -1,10 +1,10 @@
-art_make( NO_PLUGINS          
+art_make( NO_PLUGINS           ### MIGRATE-ACTION-RECOMMENDED: use art_make_library(), art_dictionary(), simple_plugin() with explicit source lists
           LIB_LIBRARIES
-                        lardata_Utilities
-			larcorealg_Geometry
+                        lardata::Utilities
+			larcorealg::Geometry
                         ${MF_MESSAGELOGGER}
                         
-                        cetlib cetlib_except
+                        cetlib::cetlib cetlib_except::cetlib_except
 			${FHICLCPP}
                         ${ROOT_BASIC_LIB_LIST}
 			${Boost_SYSTEM_LIBRARY}
diff --git a/sbndcode/SpaceChargeServices/CMakeLists.txt b/sbndcode/SpaceChargeServices/CMakeLists.txt
index b7c5a5b..afc3070 100644
--- a/sbndcode/SpaceChargeServices/CMakeLists.txt
+++ b/sbndcode/SpaceChargeServices/CMakeLists.txt
@@ -1,18 +1,18 @@
 simple_plugin(SpaceChargeServiceSBND "service"
-              sbndcode_SpaceCharge
-	      ${ART_FRAMEWORK_CORE}
-	      ${ART_FRAMEWORK_PRINCIPAL}
-	      ${ART_FRAMEWORK_SERVICES_REGISTRY}
-	      art_Persistency_Common canvas
-	      art_Persistency_Provenance canvas
+              sbndcode::SpaceCharge
+	      art::Framework_Core
+	      art::Framework_Principal
+	      art::Framework_Services_Registry
+	      art::Persistency_Common canvas::canvas
+	      art::Persistency_Provenance canvas::canvas
 	      ${ART_FRAMEWORK_SERVICES_BASIC}
-	      ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-	      ${ART_ROOT_IO_TFILESERVICE_SERVICE}
+	      art_root_io::tfile_support ${ROOT_CORE}
+	      art_root_io::TFileService_service
 	      ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-	      art_Utilities canvas
+	      art::Utilities canvas::canvas
 	      ${MF_MESSAGELOGGER}
 	      
-  	      cetlib cetlib_except
+  	      cetlib::cetlib cetlib_except::cetlib_except
    	      ${ROOT_BASIC_LIB_LIST}
 )
 install_headers()
diff --git a/sbndcode/SpaceChargeTest/CMakeLists.txt b/sbndcode/SpaceChargeTest/CMakeLists.txt
index 31371ae..d82b874 100644
--- a/sbndcode/SpaceChargeTest/CMakeLists.txt
+++ b/sbndcode/SpaceChargeTest/CMakeLists.txt
@@ -1,20 +1,20 @@
 simple_plugin(SpaceChargeTest "module"
-                           larcore_Geometry_Geometry_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardata_RecoObjects  
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
+                           larcore::Geometry_Geometry_service
+                           lardata::Utilities
+                           larevt::Filters
+                           lardataobj::RawData
+                           lardataobj::RecoBase
+                           lardata::RecoObjects  
+                           larpandora::LArPandoraInterface
+                           nusimdata::SimulationBase
+                           art::Framework_Core
+                           art::Framework_Principal
+                           art::Framework_Services_Registry
+                           art_root_io::tfile_support ${ROOT_CORE}
+                           art_root_io::TFileService_service
+                           art::Persistency_Common canvas::canvas
+                           art::Persistency_Provenance canvas::canvas
+                           art::Utilities canvas::canvas
                            ${MF_MESSAGELOGGER}
                            
                            ${FHICLCPP}
@@ -22,8 +22,8 @@ simple_plugin(SpaceChargeTest "module"
                            ${ROOT_XMLIO}
                            ${ROOT_GDML}
                            ${ROOT_BASIC_LIB_LIST}
-                           sbndcode_RecoUtils
-			   sbndcode_SpaceCharge
+                           sbndcode::RecoUtils
+			   sbndcode::SpaceCharge
         )
 
 install_headers()
diff --git a/sbndcode/Utilities/CMakeLists.txt b/sbndcode/Utilities/CMakeLists.txt
index 93c1247..5e5520a 100644
--- a/sbndcode/Utilities/CMakeLists.txt
+++ b/sbndcode/Utilities/CMakeLists.txt
@@ -1,23 +1,23 @@
 cet_enable_asserts()
 
-set( sbnd_util_lib_list lardata_Utilities_LArFFT_service
-                          larcorealg_Geometry
-                          larcore_Geometry_Geometry_service
-                          lardata_Utilities
-                          lardataalg_DetectorInfo
-                          ${ART_FRAMEWORK_CORE}
-                          ${ART_FRAMEWORK_PRINCIPAL}
-                          ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                          art_Persistency_Common
-                          art_Persistency_Provenance 
+set( sbnd_util_lib_list lardata::Utilities_LArFFT_service
+                          larcorealg::Geometry
+                          larcore::Geometry_Geometry_service
+                          lardata::Utilities
+                          lardataalg::DetectorInfo
+                          art::Framework_Core
+                          art::Framework_Principal
+                          art::Framework_Services_Registry
+                          art::Persistency_Common
+                          art::Persistency_Provenance 
                           ${ART_FRAMEWORK_SERVICES_BASIC}
-                          ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                          ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                          art_Framework_Services_System_TriggerNamesService_service
-                          art_Utilities
-                          canvas
+                          art_root_io::tfile_support ${ROOT_CORE}
+                          art_root_io::TFileService_service
+                          art::Framework_Services_System_TriggerNamesService_service
+                          art::Utilities
+                          canvas::canvas
                           ${MF_MESSAGELOGGER}
-                          cetlib cetlib_except
+                          cetlib::cetlib cetlib_except::cetlib_except
                           ${ROOT_BASIC_LIB_LIST}
                           ${ROOT_GEOM}
     )
diff --git a/sbndcode/gallery/galleryAnalysis/CMakeLists.txt b/sbndcode/gallery/galleryAnalysis/CMakeLists.txt
index 820d878..47b4697 100644
--- a/sbndcode/gallery/galleryAnalysis/CMakeLists.txt
+++ b/sbndcode/gallery/galleryAnalysis/CMakeLists.txt
@@ -50,21 +50,21 @@ project(galleryAnalysis CXX)
 
 
 # install in the same directory as the source
-set(CMAKE_INSTALL_PREFIX ${CMAKE_CURRENT_SOURCE_DIR})
+set(CMAKE_INSTALL_PREFIX ${CMAKE_CURRENT_SOURCE_DIR}) ### MIGRATE-ACTION-REQUIRED: avoid using or changing CMAKE_INSTALL_PREFIX
 
 #
 # include directories
 #
-include_directories($ENV{BOOST_INC})
-include_directories($ENV{ROOT_INC} $ENV{CLHEP_INC})
-include_directories($ENV{CETLIB_INC} $ENV{CETLIB_EXCEPT_INC} $ENV{CANVAS_INC} $ENV{CANVAS_ROOT_IO_INC})
-include_directories($ENV{FHICLCPP_INC} $ENV{MESSAGEFACILITY_INC})
-include_directories($ENV{HEP_CONCURRENCY_INC})
-include_directories($ENV{GALLERY_INC})
-include_directories($ENV{NUSIMDATA_INC} $ENV{LARCOREOBJ_INC} $ENV{LARDATAOBJ_INC})
-include_directories($ENV{LARCOREALG_INC} $ENV{LARDATAALG_INC})
+include_directories($ENV{BOOST_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories($ENV{ROOT_INC} $ENV{CLHEP_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories($ENV{CETLIB_INC} $ENV{CETLIB_EXCEPT_INC} $ENV{CANVAS_INC} $ENV{CANVAS_ROOT_IO_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories($ENV{FHICLCPP_INC} $ENV{MESSAGEFACILITY_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories($ENV{HEP_CONCURRENCY_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories($ENV{GALLERY_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories($ENV{NUSIMDATA_INC} $ENV{LARCOREOBJ_INC} $ENV{LARDATAOBJ_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
+include_directories($ENV{LARCOREALG_INC} $ENV{LARDATAALG_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
-include_directories($ENV{SBNDCODE_INC})
+include_directories($ENV{SBNDCODE_INC}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_directories() with target semantics
 
 #
 # link directories and libraries
@@ -75,14 +75,14 @@ set(LARSOFTOBJ_LIBDIRS $ENV{NUSIMDATA_LIB} $ENV{LARCOREOBJ_LIB} $ENV{LARDATAOBJ_
 set(LARSOFT_LIBDIRS $ENV{CLHEP_LIB_DIR} $ENV{LARCOREALG_LIB} $ENV{LARDATAALG_LIB})
 set(SBNDCODE_LIBDIRS $ENV{SBNDCODE_LIB})
 
-link_directories(${GALLERY_LIBDIRS} ${LARSOFTOBJ_LIBDIRS} ${LARSOFT_LIBDIRS} ${SBNDCODE_LIBDIRS})
+link_directories(${GALLERY_LIBDIRS} ${LARSOFTOBJ_LIBDIRS} ${LARSOFT_LIBDIRS} ${SBNDCODE_LIBDIRS}) ### MIGRATE-ACTION-RECOMMENDED: use target_link_libraries() with target semantics
 
-set(GALLERY_LIBS MF_MessageLogger fhiclcpp canvas cetlib_except cetlib gallery)
+set(GALLERY_LIBS MF_MessageLogger fhiclcpp canvas::canvas cetlib_except::cetlib_except cetlib::cetlib gallery::gallery)
 set(ROOT_CORELIBS Core RIO Net Hist Graf Graf3d Gpad Tree Rint Postscript Matrix Physics MathCore Thread MultiProc pthread)
-set(LARSOFTOBJ_LIBS nusimdata_SimulationBase larcoreobj_SummaryData lardataobj_RawData lardataobj_OpticalDetectorData lardataobj_RecoBase lardataobj_AnalysisBase lardataobj_MCBase lardataobj_Simulation)
+set(LARSOFTOBJ_LIBS nusimdata::SimulationBase larcoreobj_SummaryData lardataobj::RawData lardataobj::OpticalDetectorData lardataobj::RecoBase lardataobj::AnalysisBase lardataobj::MCBase lardataobj::Simulation)
 
-set(SBNDGEOMETRY_LIBS larcorealg_Geometry sbndcode_Geometry)
-set(SBNDDETINFO_LIBS lardataalg_DetectorInfo)
+set(SBNDGEOMETRY_LIBS larcorealg::Geometry sbndcode::Geometry)
+set(SBNDDETINFO_LIBS lardataalg::DetectorInfo)
 
 ################################################################################
 ###  EXECUTABLE DIRECTIVES
diff --git a/sbndcode/gallery/galleryAnalysis/MCAssociations.cpp b/sbndcode/gallery/galleryAnalysis/MCAssociations.cpp
index 45e5054..f981c7c 100644
--- a/sbndcode/gallery/galleryAnalysis/MCAssociations.cpp
+++ b/sbndcode/gallery/galleryAnalysis/MCAssociations.cpp
@@ -14,7 +14,7 @@
 #include "lardataobj/AnalysisBase/BackTrackerMatchingData.h"
 #include "lardataobj/RecoBase/Hit.h"
 
-// canvas libraries
+// canvas::canvas libraries
 #include "canvas/Persistency/Common/FindMany.h"
 
 // ROOT libraries
diff --git a/sbndcode/gallery/galleryAnalysis/MCAssociations.h b/sbndcode/gallery/galleryAnalysis/MCAssociations.h
index 0816d81..e008609 100644
--- a/sbndcode/gallery/galleryAnalysis/MCAssociations.h
+++ b/sbndcode/gallery/galleryAnalysis/MCAssociations.h
@@ -17,7 +17,7 @@
 #include "nusimdata/SimulationBase/MCParticle.h"
 #include "lardataobj/RecoBase/Track.h"
 
-// canvas libraries
+// canvas::canvas libraries
 #include "fhiclcpp/ParameterSet.h"
 
 // ROOT libraries
diff --git a/sbndcode/gallery/galleryAnalysis/TrackAnalysis.cpp b/sbndcode/gallery/galleryAnalysis/TrackAnalysis.cpp
index 4c3e760..813076c 100644
--- a/sbndcode/gallery/galleryAnalysis/TrackAnalysis.cpp
+++ b/sbndcode/gallery/galleryAnalysis/TrackAnalysis.cpp
@@ -11,7 +11,7 @@
 
 // LArSoft libraries
 
-// canvas libraries
+// canvas::canvas libraries
 
 // ROOT libraries
 
diff --git a/sbndcode/gallery/galleryAnalysis/TrackAnalysis.h b/sbndcode/gallery/galleryAnalysis/TrackAnalysis.h
index ac5931f..3fe3fad 100644
--- a/sbndcode/gallery/galleryAnalysis/TrackAnalysis.h
+++ b/sbndcode/gallery/galleryAnalysis/TrackAnalysis.h
@@ -14,7 +14,7 @@
 #include "lardataobj/RecoBase/Track.h"
 #include "larcorealg/Geometry/GeometryCore.h"
 
-// canvas libraries
+// canvas::canvas libraries
 #include "fhiclcpp/ParameterSet.h"
 
 // ROOT libraries
diff --git a/sbndcode/gallery/galleryAnalysis/galleryAnalysis.cpp b/sbndcode/gallery/galleryAnalysis/galleryAnalysis.cpp
index b80c7af..f0f7246 100644
--- a/sbndcode/gallery/galleryAnalysis/galleryAnalysis.cpp
+++ b/sbndcode/gallery/galleryAnalysis/galleryAnalysis.cpp
@@ -43,7 +43,7 @@
 // - configuration
 #include "larcorealg/Geometry/StandaloneBasicSetup.h"
 
-// gallery/canvas
+// gallery/canvas::canvas
 #include "gallery/Event.h"
 #include "canvas/Utilities/InputTag.h"
 #include "messagefacility/MessageLogger/MessageLogger.h"
diff --git a/sbndcode/gallery/helpers/sbnd_gallery_setup b/sbndcode/gallery/helpers/sbnd_gallery_setup
index 9d63e05..686fc41 100644
--- a/sbndcode/gallery/helpers/sbnd_gallery_setup
+++ b/sbndcode/gallery/helpers/sbnd_gallery_setup
@@ -133,7 +133,7 @@ EOM
     fi
     
     # expecting (UPS 5.2.0):
-    # canvas v3_00_02 -f Linux64bit+2.6-2.12 -q e14:nu:prof -z /grid/fermiapp/products/larsoft
+    # canvas::canvas v3_00_02 -f Linux64bit+2.6-2.12 -q e14:nu:prof -z /grid/fermiapp/products/larsoft
     read PkgName PkgVersion Dummy PkgFlavor Dummy PkgDatabase Dummy PkgQualifiers <<< "${!ReferencePkgSetupVarName}"
     ReferencePkgVersions+=( "$PkgVersion" )
     ReferencePkgQualifiers+=( "$PkgQualifiers" )
diff --git a/sbndcode/gallery/python/LArSoftUtils.py b/sbndcode/gallery/python/LArSoftUtils.py
index c0d7043..b94bddb 100644
--- a/sbndcode/gallery/python/LArSoftUtils.py
+++ b/sbndcode/gallery/python/LArSoftUtils.py
@@ -72,7 +72,7 @@ def loadGeometry(config=None, registry=None, mapping=None):
     SourceCode.loadHeaderFromUPS('larcorealg/Geometry/ChannelMapStandardAlg.h')
     mapping = ROOT.geo.ChannelMapStandardAlg
   SourceCode.loadHeaderFromUPS("larcorealg/Geometry/StandaloneGeometrySetup.h")
-  SourceCode.loadLibrary("larcorealg_Geometry")
+  SourceCode.loadLibrary("larcorealg::Geometry")
   service = ROOT.lar.standalone.SetupGeometry[mapping](geometryConfig)
   if registry: registry.register(serviceName, service)
 
@@ -406,21 +406,21 @@ class ServiceManagerInstance(ServiceManagerInterface):
       "detinfo::LArPropertiesStandard",
       interfaceClass="detinfo::LArProperties",
       headers = 'lardataalg/DetectorInfo/LArPropertiesStandardTestHelpers.h',
-      libraries = 'lardataalg_DetectorInfo',
+      libraries = 'lardataalg::DetectorInfo',
       ),
 
     'DetectorClocks': SimpleServiceLoader(
       "detinfo::DetectorClocksStandard",
       interfaceClass="detinfo::DetectorClocks",
       headers = 'lardataalg/DetectorInfo/DetectorClocksStandardTestHelpers.h',
-      libraries = 'lardataalg_DetectorInfo',
+      libraries = 'lardataalg::DetectorInfo',
       ),
 
     'DetectorProperties': SimpleServiceLoader(
       "detinfo::DetectorPropertiesStandard",
       interfaceClass="detinfo::DetectorProperties",
       headers = 'lardataalg/DetectorInfo/DetectorPropertiesStandardTestHelpers.h',
-      libraries = 'lardataalg_DetectorInfo',
+      libraries = 'lardataalg::DetectorInfo',
       dependencies = [ 'Geometry', 'LArProperties' ],
       ),
 
diff --git a/sbndcode/gallery/python/README.md b/sbndcode/gallery/python/README.md
index f6ef1ee..4197322 100644
--- a/sbndcode/gallery/python/README.md
+++ b/sbndcode/gallery/python/README.md
@@ -370,7 +370,7 @@ utilities for source code management:
           from ROOTutils import ROOT
           
           SourceCode.loadHeaderFromUPS('lardataalg/DetectorInfo/LArPropertiesStandard.h')
-          SourceCode.loadLibrary('lardataalg_DetectorInfo')
+          SourceCode.loadLibrary('lardataalg::DetectorInfo')
           
           ServiceRegistry = ServiceRegistryClass('standard_g4_sbnd.fcl')
           larProp = ServiceRegistry.create \
@@ -461,7 +461,7 @@ compatible with Fermilab UPS.
     `loadLibrary`
     
     :   instructs ROOT to load the specified compiled library into memory.
-        Example: `SourceCode.loadLibrary('lardataobj_RawData')` (library name
+        Example: `SourceCode.loadLibrary('lardataobj::RawData')` (library name
         is expanded adding `lib` prefix and a proper suffix).
     
 `readHeader`
diff --git a/sbndcode/gallery/python/SBNDutils.py b/sbndcode/gallery/python/SBNDutils.py
index f36ea32..93af2f2 100755
--- a/sbndcode/gallery/python/SBNDutils.py
+++ b/sbndcode/gallery/python/SBNDutils.py
@@ -27,7 +27,7 @@ def loadSBNDgeometry(config = None, registry = None):
   SourceCode = LArSoftUtils.SourceCode # alias
   
   SourceCode.loadHeaderFromUPS('sbndcode/Geometry/ChannelMapSBNDAlg.h')
-  SourceCode.loadLibrary('sbndcode_Geometry')
+  SourceCode.loadLibrary('sbndcode::Geometry')
   return LArSoftUtils.loadGeometry \
     (config=config, registry=registry, mapping=ROOT.geo.ChannelMapSBNDAlg)
 # loadSBNDgeometry()
diff --git a/test/Geometry/CMakeLists.txt b/test/Geometry/CMakeLists.txt
index 27ed222..4e75699 100644
--- a/test/Geometry/CMakeLists.txt
+++ b/test/Geometry/CMakeLists.txt
@@ -21,8 +21,8 @@ cet_test(geometry_sbnd_test
   SOURCES geometry_sbnd_test.cxx
   DATAFILES test_geometry_sbnd.fcl
   TEST_ARGS ./test_geometry_sbnd.fcl
-  LIBRARIES sbndcode_Geometry
-            larcorealg_Geometry
+  LIBRARIES sbndcode::Geometry
+            larcorealg::Geometry
             larcorealg::GeometryTestLib
             ${MF_MESSAGELOGGER}
             ${FHICLCPP}
@@ -38,8 +38,8 @@ cet_test(geometry_iterator_sbnd_test
   DATAFILES test_geometry_sbnd.fcl
   TEST_ARGS ./test_geometry_sbnd.fcl
   SOURCES geometry_iterator_sbnd_test.cxx
-  LIBRARIES sbndcode_Geometry
-            larcorealg_Geometry
+  LIBRARIES sbndcode::Geometry
+            larcorealg::Geometry
             larcorealg::GeometryTestLib
             ${MF_MESSAGELOGGER}
             ${FHICLCPP}
@@ -54,8 +54,8 @@ cet_test(geometry_iterator_loop_sbnd_test
   SOURCES geometry_iterator_loop_sbnd_test.cxx
   DATAFILES test_geometry_sbnd.fcl
   TEST_ARGS ./test_geometry_sbnd.fcl
-  LIBRARIES sbndcode_Geometry
-            larcorealg_Geometry
+  LIBRARIES sbndcode::Geometry
+            larcorealg::Geometry
             larcorealg::GeometryTestLib
             ${MF_MESSAGELOGGER}
             ${FHICLCPP}
diff --git a/test/ci/CMakeLists.txt b/test/ci/CMakeLists.txt
index 38234e5..9bd38dc 100644
--- a/test/ci/CMakeLists.txt
+++ b/test/ci/CMakeLists.txt
@@ -6,7 +6,7 @@
 # 
 # In order to achieve that:
 # 
-# 1. there is no way (I know of) with cetbuildtools of installing the scripts
+# 1. there is no way (I know of) with cetbuildtools of installing the scripts ### MIGRATE-ACTION-REQUIRED: remove
 #    into `${SBNDCODE_DIR}/test/ci` directory: `install_scripts(AS_TEST)`
 #    installs all directly into `${SBNDCODE_DIR}/test`
 # 2. the integration test configuration (`ci_tests.cfg`) stores the command for
diff --git a/ups/CMakeLists.txt b/ups/CMakeLists.txt
deleted file mode 100644
index fe33cc7..0000000
--- a/ups/CMakeLists.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-
-# create package configuration and version files
-
-process_ups_files()
-
-cet_cmake_config()
diff --git a/ups/product-config.cmake.in b/ups/product-config.cmake.in
deleted file mode 100644
index 4e22a3b..0000000
--- a/ups/product-config.cmake.in
+++ /dev/null
@@ -1,12 +0,0 @@
-
-set( @product@_VERSION @cet_dot_version@ )
-set( @product@_UPS_VERSION @version@ )
-
-@PACKAGE_INIT@
-
-@CONFIG_FIND_UPS_COMMANDS@
-
-@CONFIG_FIND_LIBRARY_COMMANDS@
-
-check_required_components(@product@)
-
diff --git a/ups/product_deps b/ups/product_deps
index 968d112..a96270f 100644
--- a/ups/product_deps
+++ b/ups/product_deps
@@ -1,69 +1,347 @@
-# This @product_deps@ file defines dependencies for this package.
+########################################################################
+# product_deps
+#
+#   Define attributes of a package to be built and distributed as a UPS
+#   product.
+#
+# This file is parsed as a consequence of sourcing the
+# setup_for_development or setup_deps shell-agnostic scripts.
+#
+# Generated by cetmodules 2.29.07 at Wed Nov 03 11:07:46 CDT
+########################################################################
+
+####################################
+# Basic information.
+
+##################
+# parent
+##################
+#
+# The parent line - if present - must be the first non-comment line in
+# the file, defining the product's name and version. Any information not
+# specified will be taken from the CMake project(<project-name> VERSION
+# <dot-version>) call in the CMakeLists.txt in the parent directory to
+# the one containing this file.
+#
+# Recommended:
+#
+#>  parent <product-name>
+#
+# Deprecated (will produce a warning):
+#
+#>  parent <product-name> <product-ups-version> [<chain>]...
+
+##################
+# chain[s]
+##################
+#
+# List the UPS chains ("-c", -t, "new," "current," "old...") to be defined
+# for the package. The trailing `s' is optional and without meaning.
+# Multiple chains may be specified with one or more declarations.
+#
+#>  chains <chain>...
 
-# The *parent* line must the first non-commented line and defines this product and version
-# The version should be of the form vxx_yy_zz (e.g. v01_02_03)
-parent sbndcode
-defaultqual e20
+##################
+# defaultqual
+##################
+#
+# The default colon-delimited qualifier set used if one is not provided
+# to setup_for_development. Build type (debug, opt or prof) is optional.
+#
+# Deprecated - a qualifier should generally be provided to the
+# invocation of setup_for_development or setup_deps.
+#
+#>  defaultqual <qualifiers>
 
-# These optional lines define the installed directories where headers,
-# libraries, and executables will be found.
-# Use them only if your product does not conform to the defaults
-#
-# Format: directory_type directory_path directory_name
-#
-# The only recognized values of the first field are fcldir, gdmldir, incdir, libdir, and bindir
-# The only recognized values of the second field are product_dir, fq_dir, and -
-# The third field is not constrained.
-#
-# Defaults:
-# incdir  product_dir  include
-# fcldir  product_dir  fcl
-# libdir  fq_dir       lib
-# bindir  fq_dir       bin
-# gdmldir -
-# fwdir   -
-#
-incdir  product_dir  include
-libdir  fq_dir       lib
-bindir  fq_dir       bin
-gdmldir product_dir
-fcldir  product_dir fcl
-fwdir   product_dir scripts
+##################
+# noarch
+##################
+#
+# Specify this keyword if the package is architecture-independent. This
+# does not necessarily imply a lack of qualifiers or of a
+# fully-qualified (fq) subdirectory in the installed package.
+#
+#>  noarch
 
-# With "product  version" table below, we now define dependencies
-# Add the dependent product and version
+##################
+# no_fq_dir
+##################
+#
+# Specify this keyword if the UPS package should not have a
+# fully-qualified (fq) subdirectory in the installed package. This does
+# not necessarily imply noarch or a lack of qualifiers, but caution
+# should be observed if using this keyword for architecture-dependent
+# packages or those with qualifiers to avoid overwritten files when
+# multiple different variants of the package are installed in the same
+# UPS area.
+#
+#>  no_fq_dir
 
-product          version
-sbncode          v09_32_00
-sbnd_data        v01_08_00 - optional
-sbndutil         v09_32_00 - optional
+##################
+# define_pythonpath
+##################
+#
+# If define_pythonpath is enabled, the appropriate path will be appended
+# to PYTHONPATH.
+#
+#>  define_pythonpath
+####################################
+parent		sbndcode
+defaultqual	e20
+####################################
 
-# list products required ONLY for the build
-# any products here must NOT have qualifiers
-cetbuildtools    v8_18_01  -   only_for_build
+####################################
+# Directory specifications.
+#
+# These optional definitions specify the installed directories where
+# various files headers, libraries, and executables will be found. Some
+# have defaults; others must be specified if files of that type are to
+# be installed. Minimize configuration complexity by using only those
+# definitions necessary for the package.
+#
+##################
+# Notes:
+#
+# * Use directory specifications only if the defaults are inappropriate
+#   for your product.
+#
+# * A specification with defaults may be obviated by specifying a base
+#   of `-' as the only argument.
+#
+# * A directory will be created and appropriate UPS table file entries
+#   made *if and only if* files of that type are installed using the
+#   appropriate directive.
+#
+##################
+# Format:
+#
+#>  <spec>		<base>		[<subdir-name>]
+#
+# <base> may be `-' (negate defaults), "product_dir", or "fq_dir" as
+# desired.
+#
+# Available <spec>s and defaults:
+#
+#>  bindir		fq_dir		bin
+#
+#     Built binaries for public use.
+#
+#>  cmakemoduledir	product_dir	Modules
+#
+#     CMake modules.
+#
+#>  fcldir		product_dir	fcl
+#
+#     FHiCL framework configuration files.
+#
+#>  fwdir
+#
+#     Framework data.
+#
+#>  gdmldir		product_dir	gdml
+#
+#     GDML geometry description files.
+#
+#>  incdir		product_dir	include
+#
+#     Headers.
+#
+#>  libdir		fq_dir		lib
+#
+#     Compiled and other libraries.
+#
+#>  perllib		product_dir	perl5lib
+#
+#     Perl modules, etc.
+#
+#>  set_fwdir
+#
+#     An additional location for framework data to be added to
+#     FW_SEARCH_PATH; may be specified multiple times.
+#
+#>  set_wpdir
+#
+#     An additional location for wirecell data to be added to
+#     WIRECELL_PATH; may be specified multiple times.
+#
+#>  testdir		product_dir	test
+#
+#     Tests.
+#
+#>  wpdir
+#
+#     Wirecell data.
+#
+####################################
+bindir	fq_dir		bin
+fcldir	product_dir	fcl
+fwdir	product_dir	scripts
+gdmldir	product_dir
+incdir	product_dir	include
+libdir	fq_dir		lib
+####################################
+
+####################################
+# Product table.
+#
+# Table defining *all* direct UPS package dependencies.
+#
+##################
+# Format:
+#
+#>  product		version		qual	["<table_format=#>"]
+#>  <ups-product_name>	<ups-version>	[<qual-trigger>]	[<flag>]
+#>...
+#>  end_product_list
+#
+# <ups-version> may be a UPS version, a chain option (-c, -t, etc.) or a
+# chain name with a preceding `-'.
+#
+# Valid <qual-trigger> values:
+#
+# * [!]<single-qual>
+#
+#   A single qualifier whose presence in the parent's qualifier will
+#   trigger the setup of the specified version of the product. A prefix
+#   of `!' will negate the match.
+#
+# * <empty>|-
+#
+#   The specified version of the product will always be set up
+#   regardless of the parent's qualifiers. Use `-' as a placeholder if
+#   <flag> is to be specified.
+#
+# * -nq-
+#
+#   Specify explicitly that this product should be set up when the
+#   parent is unqualified.
+#
+# * -default-
+#
+#   The specified version of the product will be set up if no other
+#   product table entry for this product is applicable to the parent's
+#   qualifiers.
+#
+# Valid <flag> values:
+#
+# * only_for_build
+#
+#   The specified product will be set up for building only, and will not
+#   be added to the table file.
+#
+# * optional
+#
+#   It will not be an error if the specified product is not available to
+#   be set up.
+#
+##################
+# Notes.
+#
+# * Under older versions of the product table format ("<table_format=1>"
+#   or unspecified), -nq- had the same meaning as `-' above. When
+#   updating a product_deps file these entries should be reviewed when
+#   <table_format=2> is selected.
+#
+# * "<format>" is a valid alias for "<table_format>".
+#
+# * Under most circumstances (the parent is anything other than
+#   cetmodules), an entry for cetmodules is required.
+#
+# * It is an error for more than one non-(<qual-trigger> == "-default-")
+#   entry to match for a given product.
+#
+####################################
+product		version		qual	flags		<table_format=2>
+sbncode		v09_32_00	-
+cetmodules	v2_29_07	-	only_for_build
+sbnd_data	v01_08_00	-	optional
+sbndutil	v09_32_00	-	optional
 end_product_list
+####################################
 
-# We now define allowed qualifiers and the corresponding qualifiers for the dependencies.
-# Make the table by adding columns before "notes". 
-qualifier       sbncode       sbndutil        sbnd_data  notes
-e20:debug       e20:debug     e20:debug       -nq-
-e20:prof        e20:prof      e20:prof        -nq-
-e19:debug       e19:debug     e19:debug       -nq-
-e19:prof        e19:prof      e19:prof        -nq-
-c7:debug        c7:debug      c7:debug        -nq-
-c7:prof         c7:prof       c7:prof         -nq-
+####################################
+# Qualifier table.
+#
+# For each valid qualifer set of the parent, specify how dependencies
+# should be set up.
+#
+# Format:
+#
+#>  qualifier		<prod-spec>...	[<notes>]
+#>  <parent-qual>	<spec>...   [<text...>]
+#>...
+#>  end_qualifier_list
+#
+# <prod-spec> may be a product name or "compiler."
+#
+# <parent-qual> may be a colon-delimited qualifier set, or "-nq-" as a
+# column placeholder in the case of no parent qualifiers.
+#
+# Unless <prod-spec> is "compiler", <spec> may be a colon-delimited
+# qualifier set, or:
+#
+# * -
+#
+#   The dependency is not required for this <parent-qual> and will not
+#   be set up.
+#
+# * -nq-
+#
+#   The dependency will be set up without qualifiers.
+#
+# * -b- (deprecated)
+#
+#   A build-only dependency for this <parent-qual>. If the dependency is
+#   set up in this way, it will be set up without qualifiers. For more
+#   flexibility, use the product table to specify the only_for_build
+#   nature of the dependency and the qualifier table to specifiy how it
+#   should be set up.
+#
+# If <prod-spec> is "compiler", <spec> must be `-' (no compiler
+# required) or the name of the UPS product for the desired compiler. Any
+# qualifiers required to set up the compiler should be specified in the
+# appropriate column for that product.
+#
+##################
+# Notes.
+#
+# * A column for every product in the product table (see above) is
+#   *required* unless the only_for_build flag is specified, in which
+#   case it is optional.
+#
+####################################
+qualifier	sbncode		sbndutil	sbnd_data	notes
+c7:debug	c7:debug	c7:debug	-nq-
+c7:prof		c7:prof		c7:prof		-nq-
+e19:debug	e19:debug	e19:debug	-nq-
+e19:prof	e19:prof	e19:prof	-nq-
+e20:debug	e20:debug	e20:debug	-nq-
+e20:prof	e20:prof	e20:prof	-nq-
 end_qualifier_list
+####################################
 
-# table fragment to set FW_SEARCH_PATH needed to find XML files:
+####################################
+# Table fragment.
+#
+####################################
 table_fragment_begin
     # currently, XML pandora files are installed in 'scripts':
     pathPrepend(FW_SEARCH_PATH, ${SBNDCODE_DIR}/scripts)
     pathPrepend(FW_SEARCH_PATH, /cvmfs/sbnd.osgstorage.org/pnfs/fnal.gov/usr/sbnd/persistent/stash)
     pathPrepend(PYTHONPATH, ${UPS_PROD_DIR}/python)
 table_fragment_end
+####################################
+
+####################################
+# Backmatter.
+#
+# Comments and editor-specific metadata.
 
 # Preserve tabs and formatting in emacs and vi / vim:
 
 ### Local Variables:
+### mode: sh
 ### tab-width: 8
 ### End:
+
+# vi:set ts=8 noexpandtab:
diff --git a/ups/setup_deps b/ups/setup_deps
deleted file mode 100644
index d9364e4..0000000
--- a/ups/setup_deps
+++ /dev/null
@@ -1,84 +0,0 @@
-# NO USER-SERVICEABLE PARTS BELOW.
-#
-# There should be as little as possible here,
-# with most of the heavy lifting done by other small scripts
-#
-# When sourcing this file from a script, you may have to tell this
-# source file where it is via the fw_db shell (or env) variable.
-# I.e.:
-#    set fw_db=/some/path; source /some/path/this_file
-# or  fw_db=/some/path; . /some/path/this_file
-
-test $?shell = 1 && set ss=csh || ss=sh
-#echo Shell type is $ss.
-
-# make some things similar. need to use set_ because sh builtin set would hide function set
-# Note: perhaps the trickiest thing in this file is the sh set_ function tries to return the same status
-#       as at the start of the function (which most likely is the result of a back-tick expression
-test "$ss" = csh && alias set_ set && alias vecho_ 'if ($?vv == 1) echo \!*' || eval 'vecho_() { test -n "${vv-}" && echo "$@"; return 0; }'
-test "$ss" =  sh && eval 'set_() { sts=$?;for xx in "$@";do var=`expr "$xx" : "\([^=]*\)"`;val=`expr "$xx" : "[^=]*=\(.*\)"`;eval "$var=\"$val\"";done;return $sts; }'
-test "$ss" =  sh && eval 'setenv() { export $1;eval "$1=\"\${2-}\""; }; source() { file=$1; shift; . $file "$@"; }; unsetenv_() { unset "$@"; }'
-test "$ss" =  sh && eval 'tnotnull() { eval "test -n \"\${$1-}\""; }'                             && eval 'nullout() { "$@" >/dev/null 2>&1; }'
-test "$ss" = csh && alias tnotnull "eval '"'test $?'"\!* -eq 1' && eval '"'test -n "$'"\!*"'"'"'" && alias nullout "\!* >& /dev/null" && alias unsetenv_ unsetenv
-test "$ss" = csh && alias return exit
-
-set_ msg1='ERROR: You MUST setup ups'
-test -z $UPS_DIR && ( echo ""; echo "$msg1"; echo "" ) && return
-
-set_ msg3='ERROR: You MUST specify either -o, -p, or -d'
-set_ msg4='Usage: setup_deps <-d|-o|-p> <qualifier list>'
-test -z "$1" && ( echo ""; echo "$msg4"; echo "$msg3"; echo "" ) && return
-
-# make sure we know where this script lives
-# now if we were passed a path or if not, we can figure it out (maybe if we are interactive)
-#   bash, zsh, ksh and tcsh pass params to a source file, csh does not. but someone will be writing csh scripts
-set_ msg2='Please set shell or env. variable fw_db (to be the path to the framework source code). Fix this and other errors may go away.'
-tnotnull fw_db && set_ db=`sh -c "cd $fw_db >/dev/null 2>&1 && pwd"` && vecho_ 'setting db from fw_db variable' || set_ db=
-
-test -z "$db" && tnotnull BASH_SOURCE && set_ me=`dirname $BASH_SOURCE` && set_ db=`sh -c "cd $me >/dev/null 2>&1 && pwd"` && vecho_ 'setting db via BASH_SOURCE'
-
-# history is applicable only for interactive t/csh
-test -z "$db" -a "$ss" = csh && test $?history = 0 && set history=5  # make sure history 1 works
-test -z "$db" -a "$ss" = csh && set me=`history 1|sed 's/^[ 	0-9:]*//'` && test -n "$me" && set me=`dirname $me[2]` \
-    && set db=`sh -c "cd $me >/dev/null 2>&1 && pwd"` && vecho_ 'setting db via interactive history'
-#echo This script lives in $db
-
-test -z "$db" && echo "$msg2" || vecho_ "db=$db"
-test -n "$db" && setenv CETPKG_SOURCE `dirname $db`
-
-# make sure we know the current directory
-set_ myname=`whoami`
-setenv CETPKG_BUILD /tmp/$myname/setup_deps
-rm -rf $CETPKG_BUILD
-mkdir -p $CETPKG_BUILD
-#echo Build directory is $CETPKG_BUILD
-
-echo The source code directory is $CETPKG_SOURCE
-
-set_ msg5='ERROR: setup of required products has failed'
-
-echo ----------- check this block for errors -----------------------
-set_ setup_fail="false"
-set_ cetb=` grep only_for_build $CETPKG_SOURCE/ups/product_deps | grep cetbuildtools | awk '{ print $2 }' `
-set_ cetv=` grep only_for_build $CETPKG_SOURCE/ups/product_deps | grep cetbuildtools | awk '{ print $3 }' `
-#echo Found $cetb $cetv
-setup -B $cetb $cetv
-test "$?" = 0 || set_ setup_fail="true"
-setenv UPS_OVERRIDE -B
-# now get the rest of the products
-set_ cmd="$CETBUILDTOOLS_DIR/bin/set_dev_products $CETPKG_SOURCE $CETPKG_BUILD $*"
-#echo Ready to run $cmd
-source `$cmd`
-#echo "$cmd returned $setup_fail"
-test "$setup_fail" = "true" && echo "$msg5"
-test "$setup_fail" = "true" && return 1
-test -e "diag_report" && cat diag_report
-echo ----------------------------------------------------------------
-
-# final sanity check and report
-source $CETBUILDTOOLS_DIR/bin/set_dep_check_report
-
-# cleanup before exiting
-test "$ss" = csh && unalias tnotnull nullout set_ vecho_ return
-unset ss db me thisdir msg1 msg2 msg3 msg4 msg5 setup_fail
-unset set_ setenv unsetenv_ tnotnull nullout vecho_
diff --git a/ups/setup_for_development b/ups/setup_for_development
index 11767c2..a716c71 100644
--- a/ups/setup_for_development
+++ b/ups/setup_for_development
@@ -1,89 +1,239 @@
-# NO USER-SERVICEABLE PARTS BELOW.
+########################################################################
+# This script is shell-agnostic, which involves much acrobatics to avoid
+# causing errors in one interpreter or another (*stares in csh*).
 #
-# There should be as little as possible here,
-# with most of the heavy lifting done by other small scripts
+# There should be as little as possible here, with most of the heavy
+# lifting done by other small scripts.
 #
 # When sourcing this file from a script, you may have to tell this
-# source file where it is via the fw_db shell (or env) variable.
-# I.e.:
+# source file where it is via the fw_db shell (or env) variable, i.e.
 #    set fw_db=/some/path; source /some/path/this_file
 # or  fw_db=/some/path; . /some/path/this_file
+#
+# Generated by cetmodules 2.29.07 at Wed Nov 03 11:07:46 CDT
+########################################################################
+
+########################################################################
+# NO USER-SERVICEABLE PARTS BELOW.
+########################################################################
+
+# Determine shell flavor.
+true && test $?shell = 1 && set _cetpkg_shell_flavor=csh || _cetpkg_shell_flavor=sh
+
+####################################
+# A common set of commands to use to hide as many shell flavor
+# differences as possible.
+
+##################
+# IMPORTANT NOTE:
+#
+# Following extensive tests in multiple shells, I have reached the
+# conclusion that it is not actually possible for a function to mirror
+# the semantics of an assignment with respect to the status code of ``
+# and compound statements joined with "||" or "&&". To handle this, we
+# write a large chunk of shell code to a temporary file in the current
+# directory a.k.a. CETPKG_BUILD with shell variable assignments correct
+# according to the shell flavor, and then source it. This also allows us
+# to deal with the fact that some shells don't pass arguments to sourced
+# scripts *stares harder in csh*.
+#
+# 2020-06-24 CHG.
+##################
+
+# If we're C-flavored, set up the commands using alias.
+test "$_cetpkg_shell_flavor" = csh && \
+  set _cetpkg_nobuild="" && \
+  set _cetpkg_shell_var_set=set\\1 && \
+  alias vecho_ 'if ($?vv == 1) echo \>\> \!*' && \
+  alias unsetenv_ unsetenv && \
+  alias tnotnull "eval '"'test $?'"\!* -eq 1' && eval '"'test -n "$'"\!*"'"'"'" && \
+  alias nullout "\!* >& /dev/null" && \
+  alias __TOP_EOF__ '' && \
+  alias return exit
+
+# For Bourne-flavored shells, use functions.
+test "$_cetpkg_shell_flavor" = sh && \
+  _cetpkg_nobuild="" && \
+  _cetpkg_shell_var_set= && \
+  eval 'vecho_() { test -n "${vv-}" && echo ">> $*"; return 0; }' && \
+  eval 'setenv() { eval "$1=\"\${2-}\"; export $1"; }' && \
+  eval 'unsetenv_() { unset "$@"; }' && \
+  eval 'source() { . "$@"; }' && \
+  eval 'tnotnull() { eval "test -n \"\${$1-}\""; }' && \
+  eval 'nullout() { "$@" >/dev/null 2>&1; }'
+####################################
+
+##################
+# Check for UPS (uses alias for return in C-flavored shells).
+test -z "$UPS_DIR" && \
+  ( echo ""; echo "ERROR: you MUST set up UPS"; echo "" ) && \
+  return 1 || true
+##################
+
+####################################
+# Need to find ourselves to set CETPKG_SOURCE.
+
+# Define empty variables for C-flavor shells to make things easier.
+test "$_cetpkg_shell_flavor" = csh && \
+  set _cetpkg_fw_db= _cetpkg_myself= _cetpkg_mydir=
+
+# If user has set fw_db, identify our top-level source directory now.
+test "$_cetpkg_shell_flavor" = csh && tnotnull fw_db && \
+  set _cetpkg_fw_db=`sh -c "cd $fw_db:q >/dev/null 2>&1 && /bin/pwd -P"` && \
+  vecho_ "found ourselves through fw_db" || true
+test "$_cetpkg_shell_flavor" = sh && tnotnull fw_db && \
+  _cetpkg_fw_db=`sh -c "cd \"$fw_db\" >/dev/null 2>&1 && /bin/pwd -P"` && \
+  vecho_ "found ourselves through fw_db" || true
+
+##################
+# For Bash and zsh, identify ourselves now so we don't have to go
+# through acrobatics later in the sourced script.
+test "$_cetpkg_shell_flavor" = sh && tnotnull BASH_SOURCE && \
+  _cetpkg_myself="$BASH_SOURCE" && test -n "$BASH_SOURCE" && \
+  vecho_ "found ourselves through BASH_SOURCE" || true
+test "$_cetpkg_shell_flavor" = sh -a -z "$_cetpkg_myself" && \
+  tnotnull ZSH_VERSION && eval '_cetpkg_myself="${(%):-%x}"' && \
+  test -n "$_cetpkg_myself" && \
+  vecho_ "found ourselves through ZSH prompt logic" || true
+test "$_cetpkg_shell_flavor" = sh && tnotnull _cetpkg_myself && \
+  _cetpkg_mydir=`dirname "$_cetpkg_myself"` && \
+  _cetpkg_fw_db=`sh -c "cd $_cetpkg_mydir >/dev/null 2>&1 && /bin/pwd -P"` || true
+##################
+
+##################
+# History is applicable only for interactive t/csh.
+test -z "$_cetpkg_fw_db" -a "$_cetpkg_shell_flavor" = csh -a $?history = 0 && \
+  set history=5  || true
+test -z "$_cetpkg_fw_db" -a "$_cetpkg_shell_flavor" = csh && \
+  set _cetpkg_mydir=`history 1|sed -Ee 's/^[[:space:][:digit:]:]*.*\bsource[[:space:]]+//'` && \
+  test -n "$_cetpkg_mydir" && set _cetpkg_mydir=`dirname $_cetpkg_mydir[1]:q` && \
+  set _cetpkg_fw_db=`sh -c "cd $_cetpkg_mydir:q >/dev/null 2>&1 && /bin/pwd -P"` && \
+  vecho_ 'setting db via interactive history' || true
+##################
+
+# Set CETPKG_SOURCE.
+test -n "$_cetpkg_fw_db" && \
+  vecho_ "_cetpkg_fw_db=$_cetpkg_fw_db" && \
+  setenv CETPKG_SOURCE `dirname $_cetpkg_fw_db` || \
+  printf "WARNING: please set shell or env. variable fw_db (to be the path to the\n\
+         framework source code). Fix this and other errors may go away.\n"
+####################################
+
+##################
+# Set CETPKG_BUILD.
+setenv CETPKG_BUILD `/bin/pwd -P`
+##################
+
+########################################################################
+# Write the rest of ourselves to a file and source it to handle status
+# code semantics for variable assignments.
+#
+# Note that even here we have to play a trick or two due to the fact
+# that we have to deal with the difference in the way sh- and csh-flavor
+# shells handle a quoted delimiter word for a HERE document: the latter
+# expect the delimiter to include the quoting; the former do not. This
+# is the reason for the C-flavored __TOP_EOF__ alias, and the explicit
+# return at the end of the sourced script.
+#
+########################################################################
+
+sed -Ee 's&\b__SET__([[:space:]]+)&'$_cetpkg_shell_var_set'&g' \
+  -e 's&__SETUP_ARGS__&'"$*"'&g' \
+  > ./setup_common.$_cetpkg_shell_flavor <<\__TOP_EOF__
+########################################################################
+
+####################################
+# Personality check: are we setup_deps or setup_for_development?
+#
+# If we're sourcing setup.in directly (e.g. for cetmodules itself) then
+# we select "setup_for_development" behavior, otherwise _cetpkg_nobuild
+# will be set appropriately by CMake's CONFIGURE() command for
+# setup_for_development or setup_deps.
+
+test -z "$_cetpkg_nobuild" -o "$_cetpkg_nobuild" = "--nobuild" || \
+  __SET__ _cetpkg_nobuild="" || true
+####################################
+
+####################################
+# Initial info.
+
+printf "\n";
+test -z "$_cetpkg_nobuild" && \
+  echo "The working build directory is $CETPKG_BUILD" || true
+cat <<EOF
+The source code directory is $CETPKG_SOURCE
+
+---------------------- check this block for errors ---------------------
+EOF
+
+__SET__ _cetpkg_status=""
+####################################
+
+####################################
+# Attempt to find a suitable cetmodules to set up.
+
+__SET__ _cetpkg_cetmsetup=`sed -nE 's&^[[:space:]]*(cetmodules)[[:space:]]+([^[:space:]]+).*\bonly_for_build\b.*$&\1 \2&p' "$CETPKG_SOURCE/ups/product_deps"`
+test -z "_cetpkg_cetmsetup" -a ! -x "$CETPKG_SOURCE/libexec/set_dev_products" && \
+  __SET__ _cetpkg_status=1 && \
+  echo "ERROR: unable to find suitable cetmodules >= 2.00.00" || true
+test -n "$_cetpkg_status" -o -z "$_cetpkg_cetmsetup" || setup -B $_cetpkg_cetmsetup
+test $? != 0 && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: setup of $_cetpkg_cetmsetup has failed" || true
+test -z "$_cetpkg_status$_cetpkg_cetmsetup" && setenv PATH `dropit -sfe "$CETPKG_SOURCE/bin"` && __SET__ _cetpkg_cettop="$CETPKG_SOURCE" || true
+test -z "$_cetpkg_status$_cetpkg_cettop" -a -n "$CETMODULES_DIR" && __SET__ _cetpkg_cettop="$CETMODULES_DIR"
+####################################
+
+####################################
+# Generate the setup script to set up dependencies.
+
+test -n "$_cetpkg_status" || \
+  __SET__ _cetpkg_setup="`${_cetpkg_cettop}/libexec/set_dev_products $_cetpkg_nobuild __SETUP_ARGS__`"
+test $? != 0 -o -z "$_cetpkg_setup" && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: generation of setup script has failed" || true
+####################################
+
+####################################
+# Source the setup script to set up dependencies.
+
+test -n "$_cetpkg_status" || source "$_cetpkg_setup"
+test $? != 0 && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: setup of required products has failed" || true
+__SET__ _cetpkg_setup_errlog="$CETPKG_BUILD/cetpkg_setup.err"
+test -s "$_cetpkg_setup_errlog" && cat "$_cetpkg_setup_errlog" || \
+  rm -f "$_cetpkg_setup_errlog"
+####################################
+
+cat <<EOF
+------------------------------------------------------------------------
+
+EOF
+
+# Final sanity check and report.
+test -n "$_cetpkg_status" -o -n "$_cetpkg_nobuild" || \
+  "$_cetpkg_cettop/libexec/verify_build_environment" "$CETPKG_BUILD"
+test $? != 0 && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: unable to verify build environment" || true
+
+####################################
+# Clean up before exiting.
+
+# Clean up C-flavor aliases and prepare to return^H^H^H^H^H^Hexit.
+test "$_cetpkg_shell_flavor" = csh && \
+  unalias vecho_ unsetenv_ tnotnull nullout __TOP_EOF__ return && \
+  set return=exit || return=return
+
+# Finish cleanup and exit. Note the use of eval so we can unset
+# everything including $return and $_cetpkg_status.
+eval "unset vecho_ setenv unsetenv_ source tnotnull nullout "\
+"_cetpkg_nobuild _cetpkg_shell_var_set "\
+"_cetpkg_fw_db _cetpkg_myself _cetpkg_mydir _cetpkg_cetmsetup "\
+"_cetpkg_cettop _cetpkg_setup _cetpkg_setup_errlog "\
+"_cetpkg_shell_flavor return _cetpkg_status; \
+$return $_cetpkg_status"
+####################################
+
+########################################################################
+\__TOP_EOF__
+__TOP_EOF__
 
-test $?shell = 1 && set ss=csh || ss=sh
-#echo Shell type is $ss.
-
-# make some things similar. need to use set_ because sh builtin set would hide function set
-# Note: perhaps the trickiest thing in this file is the sh set_ function tries to return the same status
-#       as at the start of the function (which most likely is the result of a back-tick expression
-test "$ss" = csh && alias set_ set && alias vecho_ 'if ($?vv == 1) echo \!*' || eval 'vecho_() { test -n "${vv-}" && echo "$@"; return 0; }'
-test "$ss" =  sh && eval 'set_() { sts=$?;for xx in "$@";do var=`expr "$xx" : "\([^=]*\)"`;val=`expr "$xx" : "[^=]*=\(.*\)"`;eval "$var=\"$val\"";done;return $sts; }'
-test "$ss" =  sh && eval 'setenv() { export $1;eval "$1=\"\${2-}\""; }; source() { file=$1; shift; . $file "$@"; }; unsetenv_() { unset "$@"; }'
-test "$ss" =  sh && eval 'tnotnull() { eval "test -n \"\${$1-}\""; }'                             && eval 'nullout() { "$@" >/dev/null 2>&1; }'
-test "$ss" = csh && alias tnotnull "eval '"'test $?'"\!* -eq 1' && eval '"'test -n "$'"\!*"'"'"'" && alias nullout "\!* >& /dev/null" && alias unsetenv_ unsetenv
-test "$ss" = csh && alias return exit
-
-set_ msg1='ERROR: You MUST setup ups'
-test -z $UPS_DIR && ( echo ""; echo "$msg1"; echo "" ) && return
-
-set_ msg3='ERROR: You MUST specify either -o, -p, or -d'
-set_ msg4='Usage: setup_for_development <-d|-o|-p> <qualifier list>'
-test -z "$1" && ( echo ""; echo "$msg4"; echo "$msg3"; echo "" ) && return
-
-# make sure we know where this script lives
-# now if we were passed a path or if not, we can figure it out (maybe if we are interactive)
-#   bash, zsh, ksh and tcsh pass params to a source file, csh does not. but someone will be writing csh scripts
-set_ msg2='Please set shell or env. variable fw_db (to be the path to the framework source code). Fix this and other errors may go away.'
-tnotnull fw_db && set_ db=`sh -c "cd $fw_db >/dev/null 2>&1 && pwd"` && vecho_ 'setting db from fw_db variable' || set_ db=
-
-test -z "$db" && tnotnull BASH_SOURCE && set_ me=`dirname $BASH_SOURCE` && set_ db=`sh -c "cd $me >/dev/null 2>&1 && pwd"` && vecho_ 'setting db via BASH_SOURCE'
-
-# history is applicable only for interactive t/csh
-test -z "$db" -a "$ss" = csh && test $?history = 0 && set history=5  # make sure history 1 works
-test -z "$db" -a "$ss" = csh && set me=`history 1|sed 's/^[ 	0-9:]*//'` && test -n "$me" && set me=`dirname $me[2]` \
-    && set db=`sh -c "cd $me >/dev/null 2>&1 && pwd"` && vecho_ 'setting db via interactive history'
-#echo This script lives in $db
-
-test -z "$db" && echo "$msg2" || vecho_ "db=$db"
-test -n "$db" && setenv CETPKG_SOURCE `dirname $db`
-
-# make sure we know the current directory
-setenv CETPKG_BUILD `pwd`
-#echo Build directory is $CETPKG_BUILD
-
-echo The working build directory is $CETPKG_BUILD
-echo The source code directory is $CETPKG_SOURCE
-
-set_ msg5='ERROR: setup of required products has failed'
-
-echo ----------- check this block for errors -----------------------
-set_ setup_fail="false"
-set_ cetb=` grep only_for_build $CETPKG_SOURCE/ups/product_deps | grep cetbuildtools | awk '{ print $2 }' `
-set_ cetv=` grep only_for_build $CETPKG_SOURCE/ups/product_deps | grep cetbuildtools | awk '{ print $3 }' `
-#echo Found $cetb $cetv
-setup -B $cetb $cetv
-test "$?" = 0 || set_ setup_fail="true"
-setenv UPS_OVERRIDE -B
-# now get the rest of the products
-set_ cmd="$CETBUILDTOOLS_DIR/bin/set_dev_products $CETPKG_SOURCE $CETPKG_BUILD $*"
-#echo Ready to run $cmd
-source `$cmd`
-#echo "$cmd returned $setup_fail"
-test "$setup_fail" = "true" && echo "$msg5"
-test "$setup_fail" = "true" && return 1
-test -e "$CETPKG_BUILD/diag_report" && cat $CETPKG_BUILD/diag_report
-echo ----------------------------------------------------------------
-
-# add lib to LD_LIBRARY_PATH
-source $CETBUILDTOOLS_DIR/bin/set_dev_lib
-# add bin to path
-source $CETBUILDTOOLS_DIR/bin/set_dev_bin
-# set FW_SEARCH_PATH
-source $CETBUILDTOOLS_DIR/bin/set_dev_fwsearch
-
-# final sanity check and report
-source $CETBUILDTOOLS_DIR/bin/set_dev_check_report
-
-# cleanup before exiting
-test "$ss" = csh && unalias tnotnull nullout set_ vecho_ return
-unset ss db me thisdir msg1 msg2 msg3 msg4 msg5 setup_fail
-unset set_ setenv unsetenv_ tnotnull nullout vecho_
+source ./setup_common.$_cetpkg_shell_flavor
